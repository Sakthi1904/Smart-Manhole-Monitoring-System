

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Apr 25 15:11:01 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=3
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Generated 12/10/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F877A Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0004                     fsr             equ	4
    71     0004                     fsr0            equ	4
    72     0000                     indf            equ	0
    73     0000                     indf0           equ	0
    74     0002                     pc              equ	2
    75     0002                     pcl             equ	2
    76     000A                     pclath          equ	10
    77     0003                     status          equ	3
    78     0000                     INDF            equ	0	;# 
    79     0001                     TMR0            equ	1	;# 
    80     0002                     PCL             equ	2	;# 
    81     0003                     STATUS          equ	3	;# 
    82     0004                     FSR             equ	4	;# 
    83     0005                     PORTA           equ	5	;# 
    84     0006                     PORTB           equ	6	;# 
    85     0007                     PORTC           equ	7	;# 
    86     0008                     PORTD           equ	8	;# 
    87     0009                     PORTE           equ	9	;# 
    88     000A                     PCLATH          equ	10	;# 
    89     000B                     INTCON          equ	11	;# 
    90     000C                     PIR1            equ	12	;# 
    91     000D                     PIR2            equ	13	;# 
    92     000E                     TMR1            equ	14	;# 
    93     000E                     TMR1L           equ	14	;# 
    94     000F                     TMR1H           equ	15	;# 
    95     0010                     T1CON           equ	16	;# 
    96     0011                     TMR2            equ	17	;# 
    97     0012                     T2CON           equ	18	;# 
    98     0013                     SSPBUF          equ	19	;# 
    99     0014                     SSPCON          equ	20	;# 
   100     0015                     CCPR1           equ	21	;# 
   101     0015                     CCPR1L          equ	21	;# 
   102     0016                     CCPR1H          equ	22	;# 
   103     0017                     CCP1CON         equ	23	;# 
   104     0018                     RCSTA           equ	24	;# 
   105     0019                     TXREG           equ	25	;# 
   106     001A                     RCREG           equ	26	;# 
   107     001B                     CCPR2           equ	27	;# 
   108     001B                     CCPR2L          equ	27	;# 
   109     001C                     CCPR2H          equ	28	;# 
   110     001D                     CCP2CON         equ	29	;# 
   111     001E                     ADRESH          equ	30	;# 
   112     001F                     ADCON0          equ	31	;# 
   113     0081                     OPTION_REG      equ	129	;# 
   114     0085                     TRISA           equ	133	;# 
   115     0086                     TRISB           equ	134	;# 
   116     0087                     TRISC           equ	135	;# 
   117     0088                     TRISD           equ	136	;# 
   118     0089                     TRISE           equ	137	;# 
   119     008C                     PIE1            equ	140	;# 
   120     008D                     PIE2            equ	141	;# 
   121     008E                     PCON            equ	142	;# 
   122     0091                     SSPCON2         equ	145	;# 
   123     0092                     PR2             equ	146	;# 
   124     0093                     SSPADD          equ	147	;# 
   125     0094                     SSPSTAT         equ	148	;# 
   126     0098                     TXSTA           equ	152	;# 
   127     0099                     SPBRG           equ	153	;# 
   128     009C                     CMCON           equ	156	;# 
   129     009D                     CVRCON          equ	157	;# 
   130     009E                     ADRESL          equ	158	;# 
   131     009F                     ADCON1          equ	159	;# 
   132     010C                     EEDATA          equ	268	;# 
   133     010D                     EEADR           equ	269	;# 
   134     010E                     EEDATH          equ	270	;# 
   135     010F                     EEADRH          equ	271	;# 
   136     018C                     EECON1          equ	396	;# 
   137     018D                     EECON2          equ	397	;# 
   138     0000                     INDF            equ	0	;# 
   139     0001                     TMR0            equ	1	;# 
   140     0002                     PCL             equ	2	;# 
   141     0003                     STATUS          equ	3	;# 
   142     0004                     FSR             equ	4	;# 
   143     0005                     PORTA           equ	5	;# 
   144     0006                     PORTB           equ	6	;# 
   145     0007                     PORTC           equ	7	;# 
   146     0008                     PORTD           equ	8	;# 
   147     0009                     PORTE           equ	9	;# 
   148     000A                     PCLATH          equ	10	;# 
   149     000B                     INTCON          equ	11	;# 
   150     000C                     PIR1            equ	12	;# 
   151     000D                     PIR2            equ	13	;# 
   152     000E                     TMR1            equ	14	;# 
   153     000E                     TMR1L           equ	14	;# 
   154     000F                     TMR1H           equ	15	;# 
   155     0010                     T1CON           equ	16	;# 
   156     0011                     TMR2            equ	17	;# 
   157     0012                     T2CON           equ	18	;# 
   158     0013                     SSPBUF          equ	19	;# 
   159     0014                     SSPCON          equ	20	;# 
   160     0015                     CCPR1           equ	21	;# 
   161     0015                     CCPR1L          equ	21	;# 
   162     0016                     CCPR1H          equ	22	;# 
   163     0017                     CCP1CON         equ	23	;# 
   164     0018                     RCSTA           equ	24	;# 
   165     0019                     TXREG           equ	25	;# 
   166     001A                     RCREG           equ	26	;# 
   167     001B                     CCPR2           equ	27	;# 
   168     001B                     CCPR2L          equ	27	;# 
   169     001C                     CCPR2H          equ	28	;# 
   170     001D                     CCP2CON         equ	29	;# 
   171     001E                     ADRESH          equ	30	;# 
   172     001F                     ADCON0          equ	31	;# 
   173     0081                     OPTION_REG      equ	129	;# 
   174     0085                     TRISA           equ	133	;# 
   175     0086                     TRISB           equ	134	;# 
   176     0087                     TRISC           equ	135	;# 
   177     0088                     TRISD           equ	136	;# 
   178     0089                     TRISE           equ	137	;# 
   179     008C                     PIE1            equ	140	;# 
   180     008D                     PIE2            equ	141	;# 
   181     008E                     PCON            equ	142	;# 
   182     0091                     SSPCON2         equ	145	;# 
   183     0092                     PR2             equ	146	;# 
   184     0093                     SSPADD          equ	147	;# 
   185     0094                     SSPSTAT         equ	148	;# 
   186     0098                     TXSTA           equ	152	;# 
   187     0099                     SPBRG           equ	153	;# 
   188     009C                     CMCON           equ	156	;# 
   189     009D                     CVRCON          equ	157	;# 
   190     009E                     ADRESL          equ	158	;# 
   191     009F                     ADCON1          equ	159	;# 
   192     010C                     EEDATA          equ	268	;# 
   193     010D                     EEADR           equ	269	;# 
   194     010E                     EEDATH          equ	270	;# 
   195     010F                     EEADRH          equ	271	;# 
   196     018C                     EECON1          equ	396	;# 
   197     018D                     EECON2          equ	397	;# 
   198     0019                     _TXREG          set	25
   199     0018                     _RCSTAbits      set	24
   200     000E                     _TMR1L          set	14
   201     000F                     _TMR1H          set	15
   202     0007                     _PORTCbits      set	7
   203     0008                     _PORTD          set	8
   204     0032                     _RB2            set	50
   205     0080                     _TMR1ON         set	128
   206     0081                     _TMR1CS         set	129
   207     0083                     _T1OSCEN        set	131
   208     0085                     _T1CKPS1        set	133
   209     0084                     _T1CKPS0        set	132
   210     0031                     _RB1            set	49
   211     0030                     _RB0            set	48
   212     0098                     _TXSTAbits      set	152
   213     0099                     _SPBRG          set	153
   214     0087                     _TRISCbits      set	135
   215     0087                     _TRISC          set	135
   216     0088                     _TRISD          set	136
   217     0432                     _TRISB2         set	1074
   218     0431                     _TRISB1         set	1073
   219     0430                     _TRISB0         set	1072
   220                           
   221                           	psect	strings
   222     0003                     __pstrings:
   223     0003                     stringtab:
   224     0003                     __stringtab:
   225                           
   226                           ;	String table - string pointers are 1 byte each
   227     0003  1BFF               	btfsc	btemp+1,7
   228     0004  280D               	ljmp	stringcode
   229     0005  1383               	bcf	3,7
   230     0006  187F               	btfsc	btemp+1,0
   231     0007  1783               	bsf	3,7
   232     0008  0800               	movf	0,w
   233     0009  0A84               	incf	4,f
   234     000A  1903               	skipnz
   235     000B  0AFF               	incf	btemp+1,f
   236     000C  0008               	return
   237     000D                     stringcode:
   238     000D                     stringdir:
   239     000D  3000               	movlw	high stringdir
   240     000E  008A               	movwf	10
   241     000F  0804               	movf	4,w
   242     0010  0A84               	incf	4,f
   243     0011  0782               	addwf	2,f
   244     0012                     __stringbase:
   245     0012  3400               	retlw	0
   246     0013                     __end_of__stringtab:
   247     0013                     STR_9:
   248     0013  3454               	retlw	84	;'T'
   249     0014  3469               	retlw	105	;'i'
   250     0015  346C               	retlw	108	;'l'
   251     0016  3474               	retlw	116	;'t'
   252     0017  343A               	retlw	58	;':'
   253     0018  3420               	retlw	32	;' '
   254     0019  3425               	retlw	37	;'%'
   255     001A  3473               	retlw	115	;'s'
   256     001B  3420               	retlw	32	;' '
   257     001C  342C               	retlw	44	;','
   258     001D  3420               	retlw	32	;' '
   259     001E  3444               	retlw	68	;'D'
   260     001F  3469               	retlw	105	;'i'
   261     0020  3473               	retlw	115	;'s'
   262     0021  3474               	retlw	116	;'t'
   263     0022  3461               	retlw	97	;'a'
   264     0023  346E               	retlw	110	;'n'
   265     0024  3463               	retlw	99	;'c'
   266     0025  3465               	retlw	101	;'e'
   267     0026  343A               	retlw	58	;':'
   268     0027  3420               	retlw	32	;' '
   269     0028  3425               	retlw	37	;'%'
   270     0029  3464               	retlw	100	;'d'
   271     002A  342C               	retlw	44	;','
   272     002B  3420               	retlw	32	;' '
   273     002C  3425               	retlw	37	;'%'
   274     002D  3473               	retlw	115	;'s'
   275     002E  340A               	retlw	10
   276     002F  3400               	retlw	0
   277     0030                     STR_7:
   278     0030  3420               	retlw	32	;' '
   279     0031  3420               	retlw	32	;' '
   280     0032  3420               	retlw	32	;' '
   281     0033  3420               	retlw	32	;' '
   282     0034  3420               	retlw	32	;' '
   283     0035  3420               	retlw	32	;' '
   284     0036  3420               	retlw	32	;' '
   285     0037  3420               	retlw	32	;' '
   286     0038  3420               	retlw	32	;' '
   287     0039  3420               	retlw	32	;' '
   288     003A  3420               	retlw	32	;' '
   289     003B  3420               	retlw	32	;' '
   290     003C  3420               	retlw	32	;' '
   291     003D  3420               	retlw	32	;' '
   292     003E  3420               	retlw	32	;' '
   293     003F  3420               	retlw	32	;' '
   294     0040  3400               	retlw	0
   295     0041                     STR_5:
   296     0041  344C               	retlw	76	;'L'
   297     0042  3465               	retlw	101	;'e'
   298     0043  3476               	retlw	118	;'v'
   299     0044  3465               	retlw	101	;'e'
   300     0045  346C               	retlw	108	;'l'
   301     0046  343A               	retlw	58	;':'
   302     0047  3420               	retlw	32	;' '
   303     0048  3448               	retlw	72	;'H'
   304     0049  3469               	retlw	105	;'i'
   305     004A  3467               	retlw	103	;'g'
   306     004B  3468               	retlw	104	;'h'
   307     004C  3420               	retlw	32	;' '
   308     004D  3420               	retlw	32	;' '
   309     004E  3420               	retlw	32	;' '
   310     004F  3400               	retlw	0
   311     0050                     STR_6:
   312     0050  344C               	retlw	76	;'L'
   313     0051  3465               	retlw	101	;'e'
   314     0052  3476               	retlw	118	;'v'
   315     0053  3465               	retlw	101	;'e'
   316     0054  346C               	retlw	108	;'l'
   317     0055  343A               	retlw	58	;':'
   318     0056  3420               	retlw	32	;' '
   319     0057  344E               	retlw	78	;'N'
   320     0058  346F               	retlw	111	;'o'
   321     0059  3472               	retlw	114	;'r'
   322     005A  346D               	retlw	109	;'m'
   323     005B  3461               	retlw	97	;'a'
   324     005C  346C               	retlw	108	;'l'
   325     005D  3420               	retlw	32	;' '
   326     005E  3400               	retlw	0
   327     005F                     STR_1:
   328     005F  3454               	retlw	84	;'T'
   329     0060  3469               	retlw	105	;'i'
   330     0061  346C               	retlw	108	;'l'
   331     0062  3474               	retlw	116	;'t'
   332     0063  343A               	retlw	58	;':'
   333     0064  3420               	retlw	32	;' '
   334     0065  344F               	retlw	79	;'O'
   335     0066  3470               	retlw	112	;'p'
   336     0067  3465               	retlw	101	;'e'
   337     0068  346E               	retlw	110	;'n'
   338     0069  3465               	retlw	101	;'e'
   339     006A  3464               	retlw	100	;'d'
   340     006B  3420               	retlw	32	;' '
   341     006C  3400               	retlw	0
   342     006D                     STR_2:
   343     006D  3454               	retlw	84	;'T'
   344     006E  3469               	retlw	105	;'i'
   345     006F  346C               	retlw	108	;'l'
   346     0070  3474               	retlw	116	;'t'
   347     0071  343A               	retlw	58	;':'
   348     0072  3420               	retlw	32	;' '
   349     0073  3443               	retlw	67	;'C'
   350     0074  346C               	retlw	108	;'l'
   351     0075  346F               	retlw	111	;'o'
   352     0076  3473               	retlw	115	;'s'
   353     0077  3465               	retlw	101	;'e'
   354     0078  3464               	retlw	100	;'d'
   355     0079  3420               	retlw	32	;' '
   356     007A  3400               	retlw	0
   357     007B                     STR_3:
   358     007B  344F               	retlw	79	;'O'
   359     007C  3470               	retlw	112	;'p'
   360     007D  3465               	retlw	101	;'e'
   361     007E  346E               	retlw	110	;'n'
   362     007F  3465               	retlw	101	;'e'
   363     0080  3464               	retlw	100	;'d'
   364     0081  3400               	retlw	0
   365     0082                     STR_4:
   366     0082  3443               	retlw	67	;'C'
   367     0083  346C               	retlw	108	;'l'
   368     0084  346F               	retlw	111	;'o'
   369     0085  3473               	retlw	115	;'s'
   370     0086  3465               	retlw	101	;'e'
   371     0087  3464               	retlw	100	;'d'
   372     0088  3400               	retlw	0
   373     0030                     STR_8           equ	STR_7
   374                           
   375                           	psect	cinit
   376     07EC                     start_initialization:	
   377                           ; #config settings
   378                           
   379     07EC                     __initialization:
   380                           
   381                           ; Clear objects allocated to BANK1
   382     07EC  1683               	bsf	3,5	;RP0=1, select bank1
   383     07ED  1303               	bcf	3,6	;RP1=0, select bank1
   384     07EE  01E0               	clrf	__pbssBANK1& (0+127)
   385     07EF  01E1               	clrf	(__pbssBANK1+1)& (0+127)
   386     07F0  01E2               	clrf	(__pbssBANK1+2)& (0+127)
   387     07F1  01E3               	clrf	(__pbssBANK1+3)& (0+127)
   388     07F2  01E4               	clrf	(__pbssBANK1+4)& (0+127)
   389                           
   390                           ; Clear objects allocated to BANK3
   391     07F3  1783               	bsf	3,7	;select IRP bank2
   392     07F4  3090               	movlw	low __pbssBANK3
   393     07F5  0084               	movwf	4
   394     07F6  30B0               	movlw	low (__pbssBANK3+32)
   395     07F7  120A  118A  229D  120A  118A  	fcall	clear_ram0
   396     07FC                     end_of_initialization:	
   397                           ;End of C runtime variable initialization code
   398                           
   399     07FC                     __end_of__initialization:
   400     07FC  0183               	clrf	3
   401     07FD  120A  118A  2D76   	ljmp	_main	;jump to C main() function
   402                           
   403                           	psect	bssBANK1
   404     00E0                     __pbssBANK1:
   405     00E0                     _width:
   406     00E0                     	ds	2
   407     00E2                     _prec:
   408     00E2                     	ds	2
   409     00E4                     _flags:
   410     00E4                     	ds	1
   411                           
   412                           	psect	bssBANK3
   413     0190                     __pbssBANK3:
   414     0190                     _dbuf:
   415     0190                     	ds	32
   416                           
   417                           	psect	clrtext
   418     029D                     clear_ram0:	
   419                           ;	Called with FSR containing the base address, and
   420                           ;	W with the last address+1
   421                           
   422     029D  0064               	clrwdt	;clear the watchdog before getting into this loop
   423     029E                     clrloop0:
   424     029E  0180               	clrf	0	;clear RAM location pointed to by FSR
   425     029F  0A84               	incf	4,f	;increment pointer
   426     02A0  0604               	xorwf	4,w	;XOR with final address
   427     02A1  1903               	btfsc	3,2	;have we reached the end yet?
   428     02A2  3400               	retlw	0	;all done for this memory range, return
   429     02A3  0604               	xorwf	4,w	;XOR again to restore value
   430     02A4  2A9E               	goto	clrloop0	;do the next byte
   431                           
   432                           	psect	cstackBANK1
   433     00A0                     __pcstackBANK1:
   434     00A0                     main@uartBuffer:
   435                           
   436                           ; 64 bytes @ 0x0
   437     00A0                     	ds	64
   438                           
   439                           	psect	cstackCOMMON
   440     0070                     __pcstackCOMMON:
   441     0070                     ?_lcd_initialize:
   442     0070                     ?_HC_SR04_Init:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0070                     ?_Tilt_Sensor_Init:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0070                     ?_UART_Init:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0070                     ?_lcd_command:	
   452                           ; 1 bytes @ 0x0
   453                           
   454     0070                     ?_UART_Write:	
   455                           ; 1 bytes @ 0x0
   456                           
   457     0070                     ?_putch:	
   458                           ; 1 bytes @ 0x0
   459                           
   460     0070                     ?_main:	
   461                           ; 1 bytes @ 0x0
   462                           
   463     0070                     ?_lcd_data:	
   464                           ; 1 bytes @ 0x0
   465                           
   466     0070                     ?_Tilt_Sensor_Read:	
   467                           ; 1 bytes @ 0x0
   468                           
   469     0070                     ?_fputc:	
   470                           ; 2 bytes @ 0x0
   471                           
   472     0070                     ?___awdiv:	
   473                           ; 2 bytes @ 0x0
   474                           
   475     0070                     ?___awmod:	
   476                           ; 2 bytes @ 0x0
   477                           
   478     0070                     ?___lwdiv:	
   479                           ; 2 bytes @ 0x0
   480                           
   481     0070                     UART_Write@data:	
   482                           ; 2 bytes @ 0x0
   483                           
   484     0070                     putch@c:	
   485                           ; 1 bytes @ 0x0
   486                           
   487     0070                     ___awdiv@divisor:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ___awmod@divisor:	
   491                           ; 2 bytes @ 0x0
   492                           
   493     0070                     ___lwdiv@divisor:	
   494                           ; 2 bytes @ 0x0
   495                           
   496     0070                     fputc@c:	
   497                           ; 2 bytes @ 0x0
   498                           
   499     0070                     ??_HC_SR04_Init:	
   500                           ; 2 bytes @ 0x0
   501                           
   502     0070                     ??_Tilt_Sensor_Init:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ??_UART_Init:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ??_lcd_command:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ??_UART_Write:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ??_putch:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ??_lcd_data:	
   518                           ; 1 bytes @ 0x0
   519                           
   520                           
   521                           ; 1 bytes @ 0x0
   522     0070                     	ds	1
   523     0071                     ?_UART_Write_Text:
   524     0071                     UART_Write_Text@text:	
   525                           ; 1 bytes @ 0x1
   526                           
   527                           
   528                           ; 1 bytes @ 0x1
   529     0071                     	ds	1
   530     0072                     lcd_command@cmd:
   531     0072                     lcd_data@data:	
   532                           ; 1 bytes @ 0x2
   533                           
   534     0072                     ___awdiv@dividend:	
   535                           ; 1 bytes @ 0x2
   536                           
   537     0072                     ___awmod@dividend:	
   538                           ; 2 bytes @ 0x2
   539                           
   540     0072                     ___lwdiv@dividend:	
   541                           ; 2 bytes @ 0x2
   542                           
   543     0072                     fputc@fp:	
   544                           ; 2 bytes @ 0x2
   545                           
   546     0072                     ??_Tilt_Sensor_Read:	
   547                           ; 2 bytes @ 0x2
   548                           
   549     0072                     ??_UART_Write_Text:	
   550                           ; 1 bytes @ 0x2
   551                           
   552                           
   553                           ; 1 bytes @ 0x2
   554     0072                     	ds	1
   555     0073                     ?_lcd_string:
   556     0073                     lcd_string@str:	
   557                           ; 1 bytes @ 0x3
   558                           
   559     0073                     ??_lcd_initialize:	
   560                           ; 2 bytes @ 0x3
   561                           
   562                           
   563                           ; 1 bytes @ 0x3
   564     0073                     	ds	1
   565     0074                     ___awdiv@counter:
   566     0074                     ___awmod@counter:	
   567                           ; 1 bytes @ 0x4
   568                           
   569     0074                     ___lwdiv@quotient:	
   570                           ; 1 bytes @ 0x4
   571                           
   572     0074                     ??_fputc:	
   573                           ; 2 bytes @ 0x4
   574                           
   575     0074                     ??___awdiv:	
   576                           ; 1 bytes @ 0x4
   577                           
   578     0074                     ??___awmod:	
   579                           ; 1 bytes @ 0x4
   580                           
   581     0074                     ??___lwdiv:	
   582                           ; 1 bytes @ 0x4
   583                           
   584                           
   585                           ; 1 bytes @ 0x4
   586     0074                     	ds	1
   587     0075                     lcd_string@num:
   588     0075                     ___awdiv@sign:	
   589                           ; 1 bytes @ 0x5
   590                           
   591     0075                     ___awmod@sign:	
   592                           ; 1 bytes @ 0x5
   593                           
   594                           
   595                           ; 1 bytes @ 0x5
   596     0075                     	ds	1
   597     0076                     ?_abs:
   598     0076                     lcd_string@i:	
   599                           ; 2 bytes @ 0x6
   600                           
   601     0076                     ___lwdiv@counter:	
   602                           ; 1 bytes @ 0x6
   603                           
   604     0076                     ___awdiv@quotient:	
   605                           ; 1 bytes @ 0x6
   606                           
   607     0076                     abs@a:	
   608                           ; 2 bytes @ 0x6
   609                           
   610     0076                     ??_lcd_string:	
   611                           ; 2 bytes @ 0x6
   612                           
   613                           
   614                           ; 1 bytes @ 0x6
   615     0076                     	ds	1
   616     0077                     ?_HC_SR04_Read:
   617                           
   618                           ; 2 bytes @ 0x7
   619     0077                     	ds	1
   620     0078                     ??_abs:
   621                           
   622                           ; 1 bytes @ 0x8
   623     0078                     	ds	1
   624     0079                     ??_HC_SR04_Read:
   625                           
   626                           ; 1 bytes @ 0x9
   627     0079                     	ds	1
   628     007A                     HC_SR04_Read@time:
   629                           
   630                           ; 2 bytes @ 0xA
   631     007A                     	ds	2
   632     007C                     HC_SR04_Read@distance:
   633                           
   634                           ; 2 bytes @ 0xC
   635     007C                     	ds	1
   636     007D                     vfprintf@cfmt:
   637     007D                     ??_vfprintf:	
   638                           ; 1 bytes @ 0xD
   639                           
   640                           
   641                           ; 1 bytes @ 0xD
   642     007D                     	ds	1
   643                           
   644                           	psect	cstackBANK0
   645     0020                     __pcstackBANK0:
   646     0020                     ?_vfpfcnvrt:
   647     0020                     vfpfcnvrt@fp:	
   648                           ; 1 bytes @ 0x0
   649                           
   650                           
   651                           ; 2 bytes @ 0x0
   652     0020                     	ds	2
   653     0022                     vfpfcnvrt@fmt:
   654                           
   655                           ; 1 bytes @ 0x2
   656     0022                     	ds	1
   657     0023                     vfpfcnvrt@ap:
   658                           
   659                           ; 2 bytes @ 0x3
   660     0023                     	ds	2
   661     0025                     ??_vfpfcnvrt:
   662                           
   663                           ; 1 bytes @ 0x5
   664     0025                     	ds	2
   665     0027                     vfpfcnvrt@cp_817:
   666                           
   667                           ; 2 bytes @ 0x7
   668     0027                     	ds	2
   669     0029                     vfpfcnvrt@done:
   670                           
   671                           ; 1 bytes @ 0x9
   672     0029                     	ds	1
   673     002A                     vfpfcnvrt@cp:
   674                           
   675                           ; 1 bytes @ 0xA
   676     002A                     	ds	1
   677     002B                     vfpfcnvrt@convarg:
   678                           
   679                           ; 4 bytes @ 0xB
   680     002B                     	ds	4
   681     002F                     vfpfcnvrt@c:
   682                           
   683                           ; 1 bytes @ 0xF
   684     002F                     	ds	1
   685     0030                     ?_vfprintf:
   686     0030                     vfprintf@fp:	
   687                           ; 2 bytes @ 0x10
   688                           
   689                           
   690                           ; 2 bytes @ 0x10
   691     0030                     	ds	2
   692     0032                     vfprintf@fmt:
   693                           
   694                           ; 1 bytes @ 0x12
   695     0032                     	ds	1
   696     0033                     vfprintf@ap:
   697                           
   698                           ; 1 bytes @ 0x13
   699     0033                     	ds	1
   700     0034                     ?_sprintf:
   701     0034                     sprintf@s:	
   702                           ; 2 bytes @ 0x14
   703                           
   704                           
   705                           ; 1 bytes @ 0x14
   706     0034                     	ds	1
   707     0035                     sprintf@fmt:
   708                           
   709                           ; 1 bytes @ 0x15
   710     0035                     	ds	7
   711     003C                     ??_sprintf:
   712                           
   713                           ; 1 bytes @ 0x1C
   714     003C                     	ds	1
   715     003D                     sprintf@ap:
   716                           
   717                           ; 1 bytes @ 0x1D
   718     003D                     	ds	1
   719     003E                     sprintf@f:
   720                           
   721                           ; 11 bytes @ 0x1E
   722     003E                     	ds	11
   723     0049                     ??_main:
   724                           
   725                           ; 1 bytes @ 0x29
   726     0049                     	ds	3
   727     004C                     main@tiltStatus:
   728                           
   729                           ; 16 bytes @ 0x2C
   730     004C                     	ds	16
   731     005C                     main@waterLevel:
   732                           
   733                           ; 16 bytes @ 0x3C
   734     005C                     	ds	16
   735     006C                     main@tiltStr:
   736                           
   737                           ; 1 bytes @ 0x4C
   738     006C                     	ds	1
   739     006D                     _main$242:
   740                           
   741                           ; 1 bytes @ 0x4D
   742     006D                     	ds	1
   743     006E                     main@distance:
   744                           
   745                           ; 2 bytes @ 0x4E
   746     006E                     	ds	2
   747                           
   748                           	psect	maintext
   749     0576                     __pmaintext:	
   750 ;;
   751 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   752 ;;
   753 ;; *************** function _main *****************
   754 ;; Defined at:
   755 ;;		line 43 in file "smart_manhole_monitoring_system.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  uartBuffer     64    0[BANK1 ] unsigned char [64]
   760 ;;  tiltStr         1   76[BANK0 ] PTR const unsigned char 
   761 ;;		 -> STR_4(7), STR_3(7), 
   762 ;;  waterLevel     16   60[BANK0 ] unsigned char [16]
   763 ;;  tiltStatus     16   44[BANK0 ] unsigned char [16]
   764 ;;  distance        2   78[BANK0 ] int 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : B00/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   774 ;;      Params:         0       0       0       0       0
   775 ;;      Locals:         0      36      64       0       0
   776 ;;      Temps:          0       3       0       0       0
   777 ;;      Totals:         0      39      64       0       0
   778 ;;Total ram usage:      103 bytes
   779 ;; Hardware stack levels required when called: 5
   780 ;; This function calls:
   781 ;;		_HC_SR04_Init
   782 ;;		_HC_SR04_Read
   783 ;;		_Tilt_Sensor_Init
   784 ;;		_Tilt_Sensor_Read
   785 ;;		_UART_Init
   786 ;;		_UART_Write_Text
   787 ;;		_lcd_command
   788 ;;		_lcd_initialize
   789 ;;		_lcd_string
   790 ;;		_sprintf
   791 ;; This function is called by:
   792 ;;		Startup code after reset
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796     0576                     _main:	
   797                           ;psect for function _main
   798                           
   799     0576                     l1444:	
   800                           ;incstack = 0
   801                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   802                           
   803                           
   804                           ;smart_manhole_monitoring_system.c: 45:     int distance;;smart_manhole_monitoring_syste
      +                          m.c: 46:     char waterLevel[16];;smart_manhole_monitoring_system.c: 47:     char tiltSt
      +                          atus[16];;smart_manhole_monitoring_system.c: 53:     TRISB0 = 0;
   805     0576  1683               	bsf	3,5	;RP0=1, select bank1
   806     0577  1303               	bcf	3,6	;RP1=0, select bank1
   807     0578  1006               	bcf	6,0	;volatile
   808                           
   809                           ;smart_manhole_monitoring_system.c: 54:     TRISB1 = 1;
   810     0579  1486               	bsf	6,1	;volatile
   811                           
   812                           ;smart_manhole_monitoring_system.c: 55:     TRISB2 = 1;
   813     057A  1506               	bsf	6,2	;volatile
   814     057B                     l1446:
   815                           
   816                           ;smart_manhole_monitoring_system.c: 56:     TRISD = 0x00;
   817     057B  0188               	clrf	8	;volatile
   818                           
   819                           ;smart_manhole_monitoring_system.c: 57:     TRISC = 0x00;
   820     057C  0187               	clrf	7	;volatile
   821     057D                     l1448:
   822                           
   823                           ;smart_manhole_monitoring_system.c: 58:     TRISCbits.TRISC6 = 0;
   824     057D  1307               	bcf	7,6	;volatile
   825     057E                     l1450:
   826                           
   827                           ;smart_manhole_monitoring_system.c: 59:     TRISCbits.TRISC7 = 1;
   828     057E  1787               	bsf	7,7	;volatile
   829     057F                     l1452:
   830                           
   831                           ;smart_manhole_monitoring_system.c: 61:     lcd_initialize();
   832     057F  120A  118A  2319  120A  118A  	fcall	_lcd_initialize
   833     0584                     l1454:
   834                           
   835                           ;smart_manhole_monitoring_system.c: 62:     HC_SR04_Init();
   836     0584  120A  118A  2299  120A  118A  	fcall	_HC_SR04_Init
   837     0589                     l1456:
   838                           
   839                           ;smart_manhole_monitoring_system.c: 63:     Tilt_Sensor_Init();
   840     0589  120A  118A  2297  120A  118A  	fcall	_Tilt_Sensor_Init
   841     058E                     l1458:
   842                           
   843                           ;smart_manhole_monitoring_system.c: 64:     UART_Init();
   844     058E  120A  118A  22A5  120A  118A  	fcall	_UART_Init
   845     0593                     l1460:
   846                           
   847                           ;smart_manhole_monitoring_system.c: 67:     {;smart_manhole_monitoring_system.c: 70:    
      +                               if (Tilt_Sensor_Read())
   848     0593  120A  118A  22BB  120A  118A  	fcall	_Tilt_Sensor_Read
   849     0598  0870               	movf	?_Tilt_Sensor_Read,w
   850     0599  0471               	iorwf	?_Tilt_Sensor_Read+1,w
   851     059A  1903               	btfsc	3,2
   852     059B  2D9D               	goto	u1141
   853     059C  2D9E               	goto	u1140
   854     059D                     u1141:
   855     059D  2DAA               	goto	l1464
   856     059E                     u1140:
   857     059E                     l1462:
   858                           
   859                           ;smart_manhole_monitoring_system.c: 71:         {;smart_manhole_monitoring_system.c: 72:
      +                                       sprintf(tiltStatus, "Tilt: Opened ");
   860     059E  304C               	movlw	(low (main@tiltStatus| 0))& (0+255)
   861     059F  1283               	bcf	3,5	;RP0=0, select bank0
   862     05A0  1303               	bcf	3,6	;RP1=0, select bank0
   863     05A1  00B4               	movwf	sprintf@s
   864     05A2  304D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   865     05A3  00B5               	movwf	sprintf@fmt
   866     05A4  120A  118A  2332  120A  118A  	fcall	_sprintf
   867                           
   868                           ;smart_manhole_monitoring_system.c: 73:         }
   869     05A9  2DB5               	goto	l1466
   870     05AA                     l1464:
   871                           
   872                           ;smart_manhole_monitoring_system.c: 75:         {;smart_manhole_monitoring_system.c: 76:
      +                                       sprintf(tiltStatus, "Tilt: Closed ");
   873     05AA  304C               	movlw	(low (main@tiltStatus| 0))& (0+255)
   874     05AB  1283               	bcf	3,5	;RP0=0, select bank0
   875     05AC  1303               	bcf	3,6	;RP1=0, select bank0
   876     05AD  00B4               	movwf	sprintf@s
   877     05AE  305B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   878     05AF  00B5               	movwf	sprintf@fmt
   879     05B0  120A  118A  2332  120A  118A  	fcall	_sprintf
   880     05B5                     l1466:
   881                           
   882                           ;smart_manhole_monitoring_system.c: 79:          const char* tiltStr = (Tilt_Sensor_Read
      +                          ()) ? "Opened" : "Closed";
   883     05B5  120A  118A  22BB  120A  118A  	fcall	_Tilt_Sensor_Read
   884     05BA  0870               	movf	?_Tilt_Sensor_Read,w
   885     05BB  0471               	iorwf	?_Tilt_Sensor_Read+1,w
   886     05BC  1D03               	btfss	3,2
   887     05BD  2DBF               	goto	u1151
   888     05BE  2DC0               	goto	u1150
   889     05BF                     u1151:
   890     05BF  2DC5               	goto	l1470
   891     05C0                     u1150:
   892     05C0                     l1468:
   893     05C0  3070               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   894     05C1  1283               	bcf	3,5	;RP0=0, select bank0
   895     05C2  1303               	bcf	3,6	;RP1=0, select bank0
   896     05C3  00ED               	movwf	_main$242
   897     05C4  2DC9               	goto	l79
   898     05C5                     l1470:
   899     05C5  3069               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   900     05C6  1283               	bcf	3,5	;RP0=0, select bank0
   901     05C7  1303               	bcf	3,6	;RP1=0, select bank0
   902     05C8  00ED               	movwf	_main$242
   903     05C9                     l79:
   904     05C9  086D               	movf	_main$242,w
   905     05CA  00EC               	movwf	main@tiltStr
   906     05CB                     l1472:
   907                           
   908                           ;smart_manhole_monitoring_system.c: 81:         distance = HC_SR04_Read();
   909     05CB  120A  118A  23AB  120A  118A  	fcall	_HC_SR04_Read
   910     05D0  0878               	movf	?_HC_SR04_Read+1,w
   911     05D1  1283               	bcf	3,5	;RP0=0, select bank0
   912     05D2  1303               	bcf	3,6	;RP1=0, select bank0
   913     05D3  00EF               	movwf	main@distance+1
   914     05D4  0877               	movf	?_HC_SR04_Read,w
   915     05D5  00EE               	movwf	main@distance
   916     05D6                     l1474:
   917                           
   918                           ;smart_manhole_monitoring_system.c: 84:         if (distance < 30)
   919     05D6  086F               	movf	main@distance+1,w
   920     05D7  3A80               	xorlw	128
   921     05D8  00FF               	movwf	btemp+1
   922     05D9  3080               	movlw	128
   923     05DA  027F               	subwf	btemp+1,w
   924     05DB  1D03               	skipz
   925     05DC  2DDF               	goto	u1165
   926     05DD  301E               	movlw	30
   927     05DE  026E               	subwf	main@distance,w
   928     05DF                     u1165:
   929     05DF  1803               	skipnc
   930     05E0  2DE2               	goto	u1161
   931     05E1  2DE3               	goto	u1160
   932     05E2                     u1161:
   933     05E2  2DEF               	goto	l1478
   934     05E3                     u1160:
   935     05E3                     l1476:
   936                           
   937                           ;smart_manhole_monitoring_system.c: 85:         {;smart_manhole_monitoring_system.c: 86:
      +                                       sprintf(waterLevel, "Level: High   ");
   938     05E3  305C               	movlw	(low (main@waterLevel| 0))& (0+255)
   939     05E4  1283               	bcf	3,5	;RP0=0, select bank0
   940     05E5  1303               	bcf	3,6	;RP1=0, select bank0
   941     05E6  00B4               	movwf	sprintf@s
   942     05E7  302F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   943     05E8  00B5               	movwf	sprintf@fmt
   944     05E9  120A  118A  2332  120A  118A  	fcall	_sprintf
   945                           
   946                           ;smart_manhole_monitoring_system.c: 87:         }
   947     05EE  2DFA               	goto	l1480
   948     05EF                     l1478:
   949                           
   950                           ;smart_manhole_monitoring_system.c: 89:         {;smart_manhole_monitoring_system.c: 90:
      +                                       sprintf(waterLevel, "Level: Normal ");
   951     05EF  305C               	movlw	(low (main@waterLevel| 0))& (0+255)
   952     05F0  1283               	bcf	3,5	;RP0=0, select bank0
   953     05F1  1303               	bcf	3,6	;RP1=0, select bank0
   954     05F2  00B4               	movwf	sprintf@s
   955     05F3  303E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   956     05F4  00B5               	movwf	sprintf@fmt
   957     05F5  120A  118A  2332  120A  118A  	fcall	_sprintf
   958     05FA                     l1480:
   959                           
   960                           ;smart_manhole_monitoring_system.c: 94:         lcd_command(0x80);
   961     05FA  3080               	movlw	128
   962     05FB  120A  118A  22EF  120A  118A  	fcall	_lcd_command
   963     0600                     l1482:
   964                           
   965                           ;smart_manhole_monitoring_system.c: 95:         lcd_string("                ", 16);
   966     0600  301E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   967     0601  00F3               	movwf	lcd_string@str
   968     0602  3080               	movlw	128
   969     0603  00F4               	movwf	lcd_string@str+1
   970     0604  3010               	movlw	16
   971     0605  00F5               	movwf	lcd_string@num
   972     0606  120A  118A  237C  120A  118A  	fcall	_lcd_string
   973                           
   974                           ;smart_manhole_monitoring_system.c: 96:         lcd_command(0x80);
   975     060B  3080               	movlw	128
   976     060C  120A  118A  22EF  120A  118A  	fcall	_lcd_command
   977     0611                     l1484:
   978                           
   979                           ;smart_manhole_monitoring_system.c: 97:         lcd_string(waterLevel, 16);
   980     0611  305C               	movlw	(low (main@waterLevel| 0))& (0+255)
   981     0612  00F3               	movwf	lcd_string@str
   982     0613  3000               	movlw	0
   983     0614  00F4               	movwf	lcd_string@str+1
   984     0615  3010               	movlw	16
   985     0616  00F5               	movwf	lcd_string@num
   986     0617  120A  118A  237C  120A  118A  	fcall	_lcd_string
   987     061C                     l1486:
   988                           
   989                           ;smart_manhole_monitoring_system.c: 100:         lcd_command(0xC0);
   990     061C  30C0               	movlw	192
   991     061D  120A  118A  22EF  120A  118A  	fcall	_lcd_command
   992                           
   993                           ;smart_manhole_monitoring_system.c: 101:         lcd_string("                ", 16);
   994     0622  301E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   995     0623  00F3               	movwf	lcd_string@str
   996     0624  3080               	movlw	128
   997     0625  00F4               	movwf	lcd_string@str+1
   998     0626  3010               	movlw	16
   999     0627  00F5               	movwf	lcd_string@num
  1000     0628  120A  118A  237C  120A  118A  	fcall	_lcd_string
  1001     062D                     l1488:
  1002                           
  1003                           ;smart_manhole_monitoring_system.c: 102:         lcd_command(0xC0);
  1004     062D  30C0               	movlw	192
  1005     062E  120A  118A  22EF  120A  118A  	fcall	_lcd_command
  1006     0633                     l1490:
  1007                           
  1008                           ;smart_manhole_monitoring_system.c: 103:         lcd_string(tiltStatus, 16);
  1009     0633  304C               	movlw	(low (main@tiltStatus| 0))& (0+255)
  1010     0634  00F3               	movwf	lcd_string@str
  1011     0635  3000               	movlw	0
  1012     0636  00F4               	movwf	lcd_string@str+1
  1013     0637  3010               	movlw	16
  1014     0638  00F5               	movwf	lcd_string@num
  1015     0639  120A  118A  237C  120A  118A  	fcall	_lcd_string
  1016     063E                     l1492:
  1017                           
  1018                           ;smart_manhole_monitoring_system.c: 106:         char uartBuffer[64];;smart_manhole_moni
      +                          toring_system.c: 107:         sprintf(uartBuffer, "Tilt: %s , Distance: %d, %s\n", tiltS
      +                          tr, distance, waterLevel);
  1019     063E  30A0               	movlw	(low (main@uartBuffer| 0))& (0+255)
  1020     063F  1283               	bcf	3,5	;RP0=0, select bank0
  1021     0640  1303               	bcf	3,6	;RP1=0, select bank0
  1022     0641  00B4               	movwf	sprintf@s
  1023     0642  3001               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1024     0643  00B5               	movwf	sprintf@fmt
  1025     0644  086C               	movf	main@tiltStr,w
  1026     0645  00B6               	movwf	low ((?_sprintf| 0+2))
  1027     0646  3000               	movlw	0
  1028     0647  1D03               	btfss	3,2
  1029     0648  3080               	movlw	128
  1030     0649  00B7               	movwf	(low ((?_sprintf| 0+2))+1)
  1031     064A  086F               	movf	main@distance+1,w
  1032     064B  00B9               	movwf	?_sprintf+5
  1033     064C  086E               	movf	main@distance,w
  1034     064D  00B8               	movwf	?_sprintf+4
  1035     064E  305C               	movlw	(low (main@waterLevel| 0))& (0+255)
  1036     064F  00BA               	movwf	low ((?_sprintf| 0+6))
  1037     0650  3000               	movlw	0
  1038     0651  00BB               	movwf	(low ((?_sprintf| 0+6))+1)
  1039     0652  120A  118A  2332  120A  118A  	fcall	_sprintf
  1040     0657                     l1494:
  1041                           
  1042                           ;smart_manhole_monitoring_system.c: 108:         UART_Write_Text(uartBuffer);
  1043     0657  30A0               	movlw	(low (main@uartBuffer| 0))& (0+255)
  1044     0658  00F1               	movwf	UART_Write_Text@text
  1045     0659  120A  118A  22DB  120A  118A  	fcall	_UART_Write_Text
  1046     065E                     l1496:
  1047                           
  1048                           ;smart_manhole_monitoring_system.c: 110:         _delay((unsigned long)((500)*(20000000/
      +                          4000.0)));
  1049     065E  300D               	movlw	13
  1050     065F  1283               	bcf	3,5	;RP0=0, select bank0
  1051     0660  1303               	bcf	3,6	;RP1=0, select bank0
  1052     0661  00CB               	movwf	??_main+2
  1053     0662  30AF               	movlw	175
  1054     0663  00CA               	movwf	??_main+1
  1055     0664  30B5               	movlw	181
  1056     0665  00C9               	movwf	??_main
  1057     0666                     u1177:
  1058     0666  0BC9               	decfsz	??_main,f
  1059     0667  2E66               	goto	u1177
  1060     0668  0BCA               	decfsz	??_main+1,f
  1061     0669  2E66               	goto	u1177
  1062     066A  0BCB               	decfsz	??_main+2,f
  1063     066B  2E66               	goto	u1177
  1064     066C  2E6D               	nop2
  1065     066D  2D93               	goto	l1460
  1066     066E  120A  118A  2800   	ljmp	start
  1067     0671                     __end_of_main:
  1068                           
  1069                           	psect	text1
  1070     0332                     __ptext1:	
  1071 ;; *************** function _sprintf *****************
  1072 ;; Defined at:
  1073 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  s               1   20[BANK0 ] PTR unsigned char 
  1076 ;;		 -> main@uartBuffer(64), main@waterLevel(16), main@tiltStatus(16), 
  1077 ;;  fmt             1   21[BANK0 ] PTR const unsigned char 
  1078 ;;		 -> STR_9(29), STR_6(15), STR_5(15), STR_2(14), 
  1079 ;;		 -> STR_1(14), 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  f              11   30[BANK0 ] struct _IO_FILE
  1082 ;;  ret             2    0        int 
  1083 ;;  ap              1   29[BANK0 ] PTR void [1]
  1084 ;;		 -> ?_sprintf(2), 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  2   20[BANK0 ] int 
  1087 ;; Registers used:
  1088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1094 ;;      Params:         0       8       0       0       0
  1095 ;;      Locals:         0      12       0       0       0
  1096 ;;      Temps:          0       1       0       0       0
  1097 ;;      Totals:         0      21       0       0       0
  1098 ;;Total ram usage:       21 bytes
  1099 ;; Hardware stack levels used: 1
  1100 ;; Hardware stack levels required when called: 4
  1101 ;; This function calls:
  1102 ;;		_vfprintf
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108     0332                     _sprintf:	
  1109                           ;psect for function _sprintf
  1110                           
  1111     0332                     l1386:	
  1112                           ;incstack = 0
  1113                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1114                           
  1115     0332  3036               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1116     0333  1283               	bcf	3,5	;RP0=0, select bank0
  1117     0334  1303               	bcf	3,6	;RP1=0, select bank0
  1118     0335  00BD               	movwf	sprintf@ap
  1119     0336                     l1388:
  1120     0336  0834               	movf	sprintf@s,w
  1121     0337  00BE               	movwf	sprintf@f
  1122     0338  3000               	movlw	0
  1123     0339  00BF               	movwf	sprintf@f+1
  1124     033A                     l1390:
  1125     033A  01C0               	clrf	sprintf@f+2
  1126     033B  01C1               	clrf	sprintf@f+3
  1127     033C                     l1392:
  1128     033C  01C7               	clrf	sprintf@f+9
  1129     033D  01C8               	clrf	sprintf@f+10
  1130     033E                     l1394:
  1131     033E  303E               	movlw	low sprintf@f
  1132     033F  00B0               	movwf	vfprintf@fp
  1133     0340  3000               	movlw	high sprintf@f
  1134     0341  00B1               	movwf	vfprintf@fp+1
  1135     0342  0835               	movf	sprintf@fmt,w
  1136     0343  00B2               	movwf	vfprintf@fmt
  1137     0344  303D               	movlw	(low (sprintf@ap| 0))& (0+255)
  1138     0345  00B3               	movwf	vfprintf@ap
  1139     0346  120A  118A  2355  120A  118A  	fcall	_vfprintf
  1140     034B                     l1396:
  1141     034B  1283               	bcf	3,5	;RP0=0, select bank0
  1142     034C  1303               	bcf	3,6	;RP1=0, select bank0
  1143     034D  0840               	movf	sprintf@f+2,w
  1144     034E  0734               	addwf	sprintf@s,w
  1145     034F  00BC               	movwf	??_sprintf
  1146     0350  083C               	movf	??_sprintf,w
  1147     0351  0084               	movwf	4
  1148     0352  1383               	bcf	3,7	;select IRP bank0
  1149     0353  0180               	clrf	0
  1150     0354                     l683:
  1151     0354  0008               	return
  1152     0355                     __end_of_sprintf:
  1153                           
  1154                           	psect	text2
  1155     0355                     __ptext2:	
  1156 ;; *************** function _vfprintf *****************
  1157 ;; Defined at:
  1158 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  1161 ;;		 -> sprintf@f(11), 
  1162 ;;  fmt             1   18[BANK0 ] PTR const unsigned char 
  1163 ;;		 -> STR_9(29), STR_6(15), STR_5(15), STR_2(14), 
  1164 ;;		 -> STR_1(14), 
  1165 ;;  ap              1   19[BANK0 ] PTR PTR void 
  1166 ;;		 -> sprintf@ap(1), 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  cfmt            1   13[COMMON] PTR unsigned char 
  1169 ;;		 -> STR_9(29), STR_6(15), STR_5(15), STR_2(14), 
  1170 ;;		 -> STR_1(14), 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  2   16[BANK0 ] int 
  1173 ;; Registers used:
  1174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1180 ;;      Params:         0       4       0       0       0
  1181 ;;      Locals:         1       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0
  1183 ;;      Totals:         1       4       0       0       0
  1184 ;;Total ram usage:        5 bytes
  1185 ;; Hardware stack levels used: 1
  1186 ;; Hardware stack levels required when called: 3
  1187 ;; This function calls:
  1188 ;;		_vfpfcnvrt
  1189 ;; This function is called by:
  1190 ;;		_sprintf
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194     0355                     _vfprintf:	
  1195                           ;psect for function _vfprintf
  1196                           
  1197     0355                     l1366:	
  1198                           ;incstack = 0
  1199                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1200                           
  1201                           
  1202                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1203     0355  1283               	bcf	3,5	;RP0=0, select bank0
  1204     0356  1303               	bcf	3,6	;RP1=0, select bank0
  1205     0357  0832               	movf	vfprintf@fmt,w
  1206     0358  00FD               	movwf	vfprintf@cfmt
  1207                           
  1208                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1209     0359  2B6B               	goto	l1370
  1210     035A                     l1368:
  1211                           
  1212                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1213     035A  1283               	bcf	3,5	;RP0=0, select bank0
  1214     035B  1303               	bcf	3,6	;RP1=0, select bank0
  1215     035C  0830               	movf	vfprintf@fp,w
  1216     035D  00A0               	movwf	vfpfcnvrt@fp
  1217     035E  0831               	movf	vfprintf@fp+1,w
  1218     035F  00A1               	movwf	vfpfcnvrt@fp+1
  1219     0360  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1220     0361  00A2               	movwf	vfpfcnvrt@fmt
  1221     0362  0833               	movf	vfprintf@ap,w
  1222     0363  00A3               	movwf	vfpfcnvrt@ap
  1223     0364  3000               	movlw	0
  1224     0365  00A4               	movwf	vfpfcnvrt@ap+1
  1225     0366  120A  118A  2671  120A  118A  	fcall	_vfpfcnvrt
  1226     036B                     l1370:
  1227                           
  1228                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1229     036B  087D               	movf	vfprintf@cfmt,w
  1230     036C  0084               	movwf	4
  1231     036D  120A  118A  200D  120A  118A  	fcall	stringdir
  1232     0372  3A00               	xorlw	0
  1233     0373  1D03               	skipz
  1234     0374  2B76               	goto	u1081
  1235     0375  2B77               	goto	u1080
  1236     0376                     u1081:
  1237     0376  2B5A               	goto	l1368
  1238     0377                     u1080:
  1239     0377                     l1372:
  1240                           
  1241                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1242     0377  1283               	bcf	3,5	;RP0=0, select bank0
  1243     0378  1303               	bcf	3,6	;RP1=0, select bank0
  1244     0379  01B0               	clrf	?_vfprintf
  1245     037A  01B1               	clrf	?_vfprintf+1
  1246     037B                     l734:
  1247     037B  0008               	return
  1248     037C                     __end_of_vfprintf:
  1249                           
  1250                           	psect	text3
  1251     0671                     __ptext3:	
  1252 ;; *************** function _vfpfcnvrt *****************
  1253 ;; Defined at:
  1254 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1257 ;;		 -> sprintf@f(11), 
  1258 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
  1259 ;;		 -> vfprintf@cfmt(1), 
  1260 ;;  ap              2    3[BANK0 ] PTR PTR void 
  1261 ;;		 -> sprintf@ap(1), 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  cp              2    7[BANK0 ] PTR unsigned char 
  1264 ;;		 -> ?_sprintf(2), main@waterLevel(16), STR_4(7), STR_3(7), 
  1265 ;;  convarg         4   11[BANK0 ] struct .
  1266 ;;  c               1   15[BANK0 ] unsigned char 
  1267 ;;  cp              1   10[BANK0 ] PTR unsigned char 
  1268 ;;		 -> STR_9(29), STR_6(15), STR_5(15), STR_2(14), 
  1269 ;;		 -> STR_1(14), 
  1270 ;;  done            1    9[BANK0 ] _Bool 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       5       0       0       0
  1281 ;;      Locals:         0       9       0       0       0
  1282 ;;      Temps:          0       2       0       0       0
  1283 ;;      Totals:         0      16       0       0       0
  1284 ;;Total ram usage:       16 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; Hardware stack levels required when called: 2
  1287 ;; This function calls:
  1288 ;;		___awdiv
  1289 ;;		___awmod
  1290 ;;		_abs
  1291 ;;		_fputc
  1292 ;; This function is called by:
  1293 ;;		_vfprintf
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297     0671                     _vfpfcnvrt:	
  1298                           ;psect for function _vfpfcnvrt
  1299                           
  1300     0671                     l1236:	
  1301                           ;incstack = 0
  1302                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1303                           
  1304                           
  1305                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1306     0671  1283               	bcf	3,5	;RP0=0, select bank0
  1307     0672  1303               	bcf	3,6	;RP1=0, select bank0
  1308     0673  0822               	movf	vfpfcnvrt@fmt,w
  1309     0674  0084               	movwf	4
  1310     0675  0800               	movf	0,w
  1311     0676  0084               	movwf	4
  1312     0677  120A  118A  200D  120A  118A  	fcall	stringdir
  1313     067C  3A25               	xorlw	37
  1314     067D  1D03               	skipz
  1315     067E  2E80               	goto	u841
  1316     067F  2E81               	goto	u840
  1317     0680                     u841:
  1318     0680  2FD2               	goto	l1310
  1319     0681                     u840:
  1320     0681                     l1238:
  1321                           
  1322                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1323     0681  0822               	movf	vfpfcnvrt@fmt,w
  1324     0682  0084               	movwf	4
  1325     0683  3001               	movlw	1
  1326     0684  0780               	addwf	0,f
  1327     0685                     l1240:
  1328                           
  1329                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1330     0685  1683               	bsf	3,5	;RP0=1, select bank1
  1331     0686  1303               	bcf	3,6	;RP1=0, select bank1
  1332     0687  01E0               	clrf	_width^(0+128)
  1333     0688  01E1               	clrf	(_width+1)^(0+128)
  1334     0689  3000               	movlw	0
  1335     068A  00E4               	movwf	_flags^(0+128)
  1336     068B                     l1242:
  1337                           
  1338                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1339     068B  30FF               	movlw	255
  1340     068C  00E2               	movwf	_prec^(0+128)
  1341     068D  30FF               	movlw	255
  1342     068E  00E3               	movwf	(_prec^(0+128)+1)
  1343     068F                     l1244:
  1344                           
  1345                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1346     068F  1283               	bcf	3,5	;RP0=0, select bank0
  1347     0690  1303               	bcf	3,6	;RP1=0, select bank0
  1348     0691  0822               	movf	vfpfcnvrt@fmt,w
  1349     0692  0084               	movwf	4
  1350     0693  0800               	movf	0,w
  1351     0694  00AA               	movwf	vfpfcnvrt@cp
  1352     0695                     l1246:
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1355     0695  082A               	movf	vfpfcnvrt@cp,w
  1356     0696  0084               	movwf	4
  1357     0697  120A  118A  200D  120A  118A  	fcall	stringdir
  1358     069C  3A64               	xorlw	100
  1359     069D  1903               	skipnz
  1360     069E  2EA0               	goto	u851
  1361     069F  2EA1               	goto	u850
  1362     06A0                     u851:
  1363     06A0  2EAD               	goto	l1250
  1364     06A1                     u850:
  1365     06A1                     l1248:
  1366     06A1  082A               	movf	vfpfcnvrt@cp,w
  1367     06A2  0084               	movwf	4
  1368     06A3  120A  118A  200D  120A  118A  	fcall	stringdir
  1369     06A8  3A69               	xorlw	105
  1370     06A9  1D03               	skipz
  1371     06AA  2EAC               	goto	u861
  1372     06AB  2EAD               	goto	u860
  1373     06AC                     u861:
  1374     06AC  2F3D               	goto	l1278
  1375     06AD                     u860:
  1376     06AD                     l1250:
  1377                           
  1378                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1379     06AD  0823               	movf	vfpfcnvrt@ap,w
  1380     06AE  0084               	movwf	4
  1381     06AF  1783               	bsf	3,7
  1382     06B0  1C24               	btfss	vfpfcnvrt@ap+1,0
  1383     06B1  1383               	bcf	3,7
  1384     06B2  0800               	movf	0,w
  1385     06B3  00FF               	movwf	btemp+1
  1386     06B4  3002               	movlw	2
  1387     06B5  0780               	addwf	0,f
  1388     06B6  087F               	movf	btemp+1,w
  1389     06B7  0084               	movwf	4
  1390     06B8  1383               	bcf	3,7	;select IRP bank0
  1391     06B9  0800               	movf	0,w
  1392     06BA  00AB               	movwf	vfpfcnvrt@convarg
  1393     06BB  0A84               	incf	4,f
  1394     06BC  0800               	movf	0,w
  1395     06BD  00AC               	movwf	vfpfcnvrt@convarg+1
  1396     06BE                     l1252:
  1397                           
  1398                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1399     06BE  0822               	movf	vfpfcnvrt@fmt,w
  1400     06BF  0084               	movwf	4
  1401     06C0  082A               	movf	vfpfcnvrt@cp,w
  1402     06C1  3E01               	addlw	1
  1403     06C2  0080               	movwf	0
  1404     06C3                     l1254:
  1405                           
  1406                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1407     06C3  3020               	movlw	32
  1408     06C4  00AF               	movwf	vfpfcnvrt@c
  1409     06C5                     l1256:
  1410                           
  1411                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1412     06C5  1BAC               	btfsc	vfpfcnvrt@convarg+1,7
  1413     06C6  2EC8               	goto	u871
  1414     06C7  2ECA               	goto	u870
  1415     06C8                     u871:
  1416     06C8  3001               	movlw	1
  1417     06C9  2ECB               	goto	u880
  1418     06CA                     u870:
  1419     06CA  3000               	movlw	0
  1420     06CB                     u880:
  1421     06CB  00A9               	movwf	vfpfcnvrt@done
  1422     06CC                     l1258:
  1423                           
  1424                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1425     06CC  3001               	movlw	1
  1426     06CD  02AF               	subwf	vfpfcnvrt@c,f
  1427     06CE  082F               	movf	vfpfcnvrt@c,w
  1428     06CF  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  1429     06D0  0084               	movwf	4
  1430     06D1  300A               	movlw	10
  1431     06D2  00F0               	movwf	___awmod@divisor
  1432     06D3  3000               	movlw	0
  1433     06D4  00F1               	movwf	___awmod@divisor+1
  1434     06D5  082C               	movf	vfpfcnvrt@convarg+1,w
  1435     06D6  00F3               	movwf	___awmod@dividend+1
  1436     06D7  082B               	movf	vfpfcnvrt@convarg,w
  1437     06D8  00F2               	movwf	___awmod@dividend
  1438     06D9  120A  118A  2422  120A  118A  	fcall	___awmod
  1439     06DE  0871               	movf	?___awmod+1,w
  1440     06DF  00F7               	movwf	abs@a+1
  1441     06E0  0870               	movf	?___awmod,w
  1442     06E1  00F6               	movwf	abs@a
  1443     06E2  120A  118A  22CA  120A  118A  	fcall	_abs
  1444     06E7  0876               	movf	?_abs,w
  1445     06E8  3E30               	addlw	48
  1446     06E9  1783               	bsf	3,7	;select IRP bank3
  1447     06EA  0080               	movwf	0
  1448     06EB                     l1260:
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1451     06EB  300A               	movlw	10
  1452     06EC  00F0               	movwf	___awdiv@divisor
  1453     06ED  3000               	movlw	0
  1454     06EE  00F1               	movwf	___awdiv@divisor+1
  1455     06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1456     06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1457     06F1  082C               	movf	vfpfcnvrt@convarg+1,w
  1458     06F2  00F3               	movwf	___awdiv@dividend+1
  1459     06F3  082B               	movf	vfpfcnvrt@convarg,w
  1460     06F4  00F2               	movwf	___awdiv@dividend
  1461     06F5  120A  118A  2479  120A  118A  	fcall	___awdiv
  1462     06FA  0871               	movf	?___awdiv+1,w
  1463     06FB  1283               	bcf	3,5	;RP0=0, select bank0
  1464     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1465     06FD  00AC               	movwf	vfpfcnvrt@convarg+1
  1466     06FE  0870               	movf	?___awdiv,w
  1467     06FF  00AB               	movwf	vfpfcnvrt@convarg
  1468     0700                     l1262:
  1469                           
  1470                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1471     0700  082B               	movf	vfpfcnvrt@convarg,w
  1472     0701  042C               	iorwf	vfpfcnvrt@convarg+1,w
  1473     0702  1903               	btfsc	3,2
  1474     0703  2F05               	goto	u891
  1475     0704  2F06               	goto	u890
  1476     0705                     u891:
  1477     0705  2F0B               	goto	l1266
  1478     0706                     u890:
  1479     0706                     l1264:
  1480     0706  082F               	movf	vfpfcnvrt@c,w
  1481     0707  1D03               	btfss	3,2
  1482     0708  2F0A               	goto	u901
  1483     0709  2F0B               	goto	u900
  1484     070A                     u901:
  1485     070A  2ECC               	goto	l1258
  1486     070B                     u900:
  1487     070B                     l1266:
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1490     070B  082F               	movf	vfpfcnvrt@c,w
  1491     070C  1903               	btfsc	3,2
  1492     070D  2F0F               	goto	u911
  1493     070E  2F10               	goto	u910
  1494     070F                     u911:
  1495     070F  2F36               	goto	l1276
  1496     0710                     u910:
  1497     0710                     l1268:
  1498     0710  0829               	movf	vfpfcnvrt@done,w
  1499     0711  1903               	btfsc	3,2
  1500     0712  2F14               	goto	u921
  1501     0713  2F15               	goto	u920
  1502     0714                     u921:
  1503     0714  2F36               	goto	l1276
  1504     0715                     u920:
  1505     0715                     l1270:
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1508     0715  3001               	movlw	1
  1509     0716  02AF               	subwf	vfpfcnvrt@c,f
  1510     0717  082F               	movf	vfpfcnvrt@c,w
  1511     0718  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  1512     0719  0084               	movwf	4
  1513     071A  302D               	movlw	45
  1514     071B  1783               	bsf	3,7	;select IRP bank3
  1515     071C  0080               	movwf	0
  1516     071D  2F36               	goto	l1276
  1517     071E                     l1272:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1520     071E  082F               	movf	vfpfcnvrt@c,w
  1521     071F  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  1522     0720  0084               	movwf	4
  1523     0721  1783               	bsf	3,7	;select IRP bank3
  1524     0722  0800               	movf	0,w
  1525     0723  00A5               	movwf	??_vfpfcnvrt
  1526     0724  01A6               	clrf	??_vfpfcnvrt+1
  1527     0725  0825               	movf	??_vfpfcnvrt,w
  1528     0726  00F0               	movwf	fputc@c
  1529     0727  0826               	movf	??_vfpfcnvrt+1,w
  1530     0728  00F1               	movwf	fputc@c+1
  1531     0729  0820               	movf	vfpfcnvrt@fp,w
  1532     072A  00F2               	movwf	fputc@fp
  1533     072B  0821               	movf	vfpfcnvrt@fp+1,w
  1534     072C  00F3               	movwf	fputc@fp+1
  1535     072D  120A  118A  24DC  120A  118A  	fcall	_fputc
  1536     0732                     l1274:
  1537     0732  3001               	movlw	1
  1538     0733  1283               	bcf	3,5	;RP0=0, select bank0
  1539     0734  1303               	bcf	3,6	;RP1=0, select bank0
  1540     0735  07AF               	addwf	vfpfcnvrt@c,f
  1541     0736                     l1276:
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1544     0736  3020               	movlw	32
  1545     0737  062F               	xorwf	vfpfcnvrt@c,w
  1546     0738  1D03               	btfss	3,2
  1547     0739  2F3B               	goto	u931
  1548     073A  2F3C               	goto	u930
  1549     073B                     u931:
  1550     073B  2F1E               	goto	l1272
  1551     073C                     u930:
  1552     073C  2FEB               	goto	l721
  1553     073D                     l1278:
  1554                           
  1555                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  1556     073D  01A9               	clrf	vfpfcnvrt@done
  1557     073E                     l1280:
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  1560     073E  0822               	movf	vfpfcnvrt@fmt,w
  1561     073F  0084               	movwf	4
  1562     0740  0800               	movf	0,w
  1563     0741  0084               	movwf	4
  1564     0742  120A  118A  200D  120A  118A  	fcall	stringdir
  1565     0747  3A73               	xorlw	115
  1566     0748  1D03               	skipz
  1567     0749  2F4B               	goto	u941
  1568     074A  2F4C               	goto	u940
  1569     074B                     u941:
  1570     074B  2F53               	goto	l1286
  1571     074C                     u940:
  1572     074C                     l1282:
  1573                           
  1574                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  1575     074C  0822               	movf	vfpfcnvrt@fmt,w
  1576     074D  0084               	movwf	4
  1577     074E  3001               	movlw	1
  1578     074F  0780               	addwf	0,f
  1579     0750                     l1284:
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  1582     0750  3001               	movlw	1
  1583     0751  00A9               	movwf	vfpfcnvrt@done
  1584                           
  1585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1660:   }
  1586     0752  2F84               	goto	l1296
  1587     0753                     l1286:
  1588     0753  0822               	movf	vfpfcnvrt@fmt,w
  1589     0754  0084               	movwf	4
  1590     0755  0800               	movf	0,w
  1591     0756  0084               	movwf	4
  1592     0757  120A  118A  200D  120A  118A  	fcall	stringdir
  1593     075C  3A6C               	xorlw	108
  1594     075D  1D03               	skipz
  1595     075E  2F60               	goto	u951
  1596     075F  2F61               	goto	u950
  1597     0760                     u951:
  1598     0760  2F84               	goto	l1296
  1599     0761                     u950:
  1600     0761                     l1288:
  1601     0761  0822               	movf	vfpfcnvrt@fmt,w
  1602     0762  0084               	movwf	4
  1603     0763  0800               	movf	0,w
  1604     0764  3E01               	addlw	1
  1605     0765  0084               	movwf	4
  1606     0766  120A  118A  200D  120A  118A  	fcall	stringdir
  1607     076B  3A6C               	xorlw	108
  1608     076C  1D03               	skipz
  1609     076D  2F6F               	goto	u961
  1610     076E  2F70               	goto	u960
  1611     076F                     u961:
  1612     076F  2F84               	goto	l1296
  1613     0770                     u960:
  1614     0770                     l1290:
  1615     0770  0822               	movf	vfpfcnvrt@fmt,w
  1616     0771  0084               	movwf	4
  1617     0772  0800               	movf	0,w
  1618     0773  3E02               	addlw	2
  1619     0774  0084               	movwf	4
  1620     0775  120A  118A  200D  120A  118A  	fcall	stringdir
  1621     077A  3A73               	xorlw	115
  1622     077B  1D03               	skipz
  1623     077C  2F7E               	goto	u971
  1624     077D  2F7F               	goto	u970
  1625     077E                     u971:
  1626     077E  2F84               	goto	l1296
  1627     077F                     u970:
  1628     077F                     l1292:
  1629                           
  1630                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  1631     077F  0822               	movf	vfpfcnvrt@fmt,w
  1632     0780  0084               	movwf	4
  1633     0781  3003               	movlw	3
  1634     0782  0780               	addwf	0,f
  1635     0783  2F50               	goto	l1284
  1636     0784                     l1296:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  1639     0784  0829               	movf	vfpfcnvrt@done,w
  1640     0785  1903               	btfsc	3,2
  1641     0786  2F88               	goto	u981
  1642     0787  2F89               	goto	u980
  1643     0788                     u981:
  1644     0788  2FCB               	goto	l1306
  1645     0789                     u980:
  1646     0789                     l1298:
  1647                           
  1648                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1669:    for (cha
      +                          r * cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0)); *cp != '\0'; cp++) {
  1649     0789  0823               	movf	vfpfcnvrt@ap,w
  1650     078A  0084               	movwf	4
  1651     078B  1783               	bsf	3,7
  1652     078C  1C24               	btfss	vfpfcnvrt@ap+1,0
  1653     078D  1383               	bcf	3,7
  1654     078E  0800               	movf	0,w
  1655     078F  00FF               	movwf	btemp+1
  1656     0790  3002               	movlw	2
  1657     0791  0780               	addwf	0,f
  1658     0792  087F               	movf	btemp+1,w
  1659     0793  0084               	movwf	4
  1660     0794  1383               	bcf	3,7	;select IRP bank0
  1661     0795  0800               	movf	0,w
  1662     0796  00A7               	movwf	vfpfcnvrt@cp_817
  1663     0797  0A84               	incf	4,f
  1664     0798  0800               	movf	0,w
  1665     0799  0384               	decf	4,f
  1666     079A  00A8               	movwf	vfpfcnvrt@cp_817+1
  1667     079B  2FBC               	goto	l1304
  1668     079C                     l1300:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1670:     fputc(*
      +                          cp, fp);
  1671     079C  0828               	movf	vfpfcnvrt@cp_817+1,w
  1672     079D  00FF               	movwf	btemp+1
  1673     079E  0827               	movf	vfpfcnvrt@cp_817,w
  1674     079F  0084               	movwf	4
  1675     07A0  120A  118A  2003  120A  118A  	fcall	stringtab
  1676     07A5  00A5               	movwf	??_vfpfcnvrt
  1677     07A6  01A6               	clrf	??_vfpfcnvrt+1
  1678     07A7  0825               	movf	??_vfpfcnvrt,w
  1679     07A8  00F0               	movwf	fputc@c
  1680     07A9  0826               	movf	??_vfpfcnvrt+1,w
  1681     07AA  00F1               	movwf	fputc@c+1
  1682     07AB  0820               	movf	vfpfcnvrt@fp,w
  1683     07AC  00F2               	movwf	fputc@fp
  1684     07AD  0821               	movf	vfpfcnvrt@fp+1,w
  1685     07AE  00F3               	movwf	fputc@fp+1
  1686     07AF  120A  118A  24DC  120A  118A  	fcall	_fputc
  1687     07B4                     l1302:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1674:    }
  1690     07B4  3001               	movlw	1
  1691     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1692     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1693     07B7  07A7               	addwf	vfpfcnvrt@cp_817,f
  1694     07B8  1803               	skipnc
  1695     07B9  0AA8               	incf	vfpfcnvrt@cp_817+1,f
  1696     07BA  3000               	movlw	0
  1697     07BB  07A8               	addwf	vfpfcnvrt@cp_817+1,f
  1698     07BC                     l1304:
  1699     07BC  0828               	movf	vfpfcnvrt@cp_817+1,w
  1700     07BD  00FF               	movwf	btemp+1
  1701     07BE  0827               	movf	vfpfcnvrt@cp_817,w
  1702     07BF  0084               	movwf	4
  1703     07C0  120A  118A  2003  120A  118A  	fcall	stringtab
  1704     07C5  3A00               	xorlw	0
  1705     07C6  1D03               	skipz
  1706     07C7  2FC9               	goto	u991
  1707     07C8  2FCA               	goto	u990
  1708     07C9                     u991:
  1709     07C9  2F9C               	goto	l1300
  1710     07CA                     u990:
  1711     07CA  2FEB               	goto	l721
  1712     07CB                     l1306:
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1715     07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1716     07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1717     07CD  0822               	movf	vfpfcnvrt@fmt,w
  1718     07CE  0084               	movwf	4
  1719     07CF  3001               	movlw	1
  1720     07D0  0780               	addwf	0,f
  1721     07D1  2FEB               	goto	l721
  1722     07D2                     l1310:
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1725     07D2  0822               	movf	vfpfcnvrt@fmt,w
  1726     07D3  0084               	movwf	4
  1727     07D4  0800               	movf	0,w
  1728     07D5  0084               	movwf	4
  1729     07D6  120A  118A  200D  120A  118A  	fcall	stringdir
  1730     07DB  00A5               	movwf	??_vfpfcnvrt
  1731     07DC  01A6               	clrf	??_vfpfcnvrt+1
  1732     07DD  0825               	movf	??_vfpfcnvrt,w
  1733     07DE  00F0               	movwf	fputc@c
  1734     07DF  0826               	movf	??_vfpfcnvrt+1,w
  1735     07E0  00F1               	movwf	fputc@c+1
  1736     07E1  0820               	movf	vfpfcnvrt@fp,w
  1737     07E2  00F2               	movwf	fputc@fp
  1738     07E3  0821               	movf	vfpfcnvrt@fp+1,w
  1739     07E4  00F3               	movwf	fputc@fp+1
  1740     07E5  120A  118A  24DC  120A  118A  	fcall	_fputc
  1741     07EA  2FCB               	goto	l1306
  1742     07EB                     l721:
  1743     07EB  0008               	return
  1744     07EC                     __end_of_vfpfcnvrt:
  1745                           
  1746                           	psect	text4
  1747     04DC                     __ptext4:	
  1748 ;; *************** function _fputc *****************
  1749 ;; Defined at:
  1750 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  c               2    0[COMMON] int 
  1753 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  1754 ;;		 -> sprintf@f(11), 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  2    0[COMMON] int 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         4       0       0       0       0
  1767 ;;      Locals:         0       0       0       0       0
  1768 ;;      Temps:          9       0       0       0       0
  1769 ;;      Totals:        13       0       0       0       0
  1770 ;;Total ram usage:       13 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 1
  1773 ;; This function calls:
  1774 ;;		_putch
  1775 ;; This function is called by:
  1776 ;;		_vfpfcnvrt
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780     04DC                     _fputc:	
  1781                           ;psect for function _fputc
  1782                           
  1783     04DC                     l1214:	
  1784                           ;incstack = 0
  1785                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1786                           
  1787     04DC  0872               	movf	fputc@fp,w
  1788     04DD  0473               	iorwf	fputc@fp+1,w
  1789     04DE  1903               	btfsc	3,2
  1790     04DF  2CE1               	goto	u781
  1791     04E0  2CE2               	goto	u780
  1792     04E1                     u781:
  1793     04E1  2CE8               	goto	l1218
  1794     04E2                     u780:
  1795     04E2                     l1216:
  1796     04E2  0872               	movf	fputc@fp,w
  1797     04E3  0473               	iorwf	fputc@fp+1,w
  1798     04E4  1D03               	btfss	3,2
  1799     04E5  2CE7               	goto	u791
  1800     04E6  2CE8               	goto	u790
  1801     04E7                     u791:
  1802     04E7  2CEF               	goto	l1220
  1803     04E8                     u790:
  1804     04E8                     l1218:
  1805     04E8  0870               	movf	fputc@c,w
  1806     04E9  120A  118A  2298  120A  118A  	fcall	_putch
  1807     04EE  2D75               	goto	l753
  1808     04EF                     l1220:
  1809     04EF  0872               	movf	fputc@fp,w
  1810     04F0  3E09               	addlw	9
  1811     04F1  00F4               	movwf	??_fputc
  1812     04F2  0873               	movf	fputc@fp+1,w
  1813     04F3  1803               	skipnc
  1814     04F4  3E01               	addlw	1
  1815     04F5  3E00               	addlw	0
  1816     04F6  00F5               	movwf	??_fputc+1
  1817     04F7  0874               	movf	??_fputc,w
  1818     04F8  0084               	movwf	4
  1819     04F9  1783               	bsf	3,7
  1820     04FA  1C75               	btfss	??_fputc+1,0
  1821     04FB  1383               	bcf	3,7
  1822     04FC  0800               	movf	0,w
  1823     04FD  00F6               	movwf	??_fputc+2
  1824     04FE  0A84               	incf	4,f
  1825     04FF  0800               	movf	0,w
  1826     0500  00F7               	movwf	??_fputc+3
  1827     0501  0876               	movf	??_fputc+2,w
  1828     0502  0477               	iorwf	??_fputc+3,w
  1829     0503  1903               	btfsc	3,2
  1830     0504  2D06               	goto	u801
  1831     0505  2D07               	goto	u800
  1832     0506                     u801:
  1833     0506  2D39               	goto	l1224
  1834     0507                     u800:
  1835     0507                     l1222:
  1836     0507  0872               	movf	fputc@fp,w
  1837     0508  3E09               	addlw	9
  1838     0509  00F4               	movwf	??_fputc
  1839     050A  0873               	movf	fputc@fp+1,w
  1840     050B  1803               	skipnc
  1841     050C  3E01               	addlw	1
  1842     050D  3E00               	addlw	0
  1843     050E  00F5               	movwf	??_fputc+1
  1844     050F  0874               	movf	??_fputc,w
  1845     0510  0084               	movwf	4
  1846     0511  1783               	bsf	3,7
  1847     0512  1C75               	btfss	??_fputc+1,0
  1848     0513  1383               	bcf	3,7
  1849     0514  0800               	movf	0,w
  1850     0515  00F6               	movwf	??_fputc+2
  1851     0516  0A84               	incf	4,f
  1852     0517  0800               	movf	0,w
  1853     0518  00F7               	movwf	??_fputc+3
  1854     0519  0872               	movf	fputc@fp,w
  1855     051A  3E02               	addlw	2
  1856     051B  00F8               	movwf	??_fputc+4
  1857     051C  0873               	movf	fputc@fp+1,w
  1858     051D  1803               	skipnc
  1859     051E  3E01               	addlw	1
  1860     051F  3E00               	addlw	0
  1861     0520  00F9               	movwf	??_fputc+5
  1862     0521  0878               	movf	??_fputc+4,w
  1863     0522  0084               	movwf	4
  1864     0523  1783               	bsf	3,7
  1865     0524  1C79               	btfss	??_fputc+5,0
  1866     0525  1383               	bcf	3,7
  1867     0526  0800               	movf	0,w
  1868     0527  00FA               	movwf	??_fputc+6
  1869     0528  0A84               	incf	4,f
  1870     0529  0800               	movf	0,w
  1871     052A  00FB               	movwf	??_fputc+7
  1872     052B  087B               	movf	??_fputc+7,w
  1873     052C  3A80               	xorlw	128
  1874     052D  00FC               	movwf	??_fputc+8
  1875     052E  0877               	movf	??_fputc+3,w
  1876     052F  3A80               	xorlw	128
  1877     0530  027C               	subwf	??_fputc+8,w
  1878     0531  1D03               	skipz
  1879     0532  2D35               	goto	u815
  1880     0533  0876               	movf	??_fputc+2,w
  1881     0534  027A               	subwf	??_fputc+6,w
  1882     0535                     u815:
  1883     0535  1803               	skipnc
  1884     0536  2D38               	goto	u811
  1885     0537  2D39               	goto	u810
  1886     0538                     u811:
  1887     0538  2D75               	goto	l753
  1888     0539                     u810:
  1889     0539                     l1224:
  1890     0539  0872               	movf	fputc@fp,w
  1891     053A  0084               	movwf	4
  1892     053B  1783               	bsf	3,7
  1893     053C  1C73               	btfss	fputc@fp+1,0
  1894     053D  1383               	bcf	3,7
  1895     053E  0800               	movf	0,w
  1896     053F  00F4               	movwf	??_fputc
  1897     0540  0A84               	incf	4,f
  1898     0541  0800               	movf	0,w
  1899     0542  00F5               	movwf	??_fputc+1
  1900     0543  0872               	movf	fputc@fp,w
  1901     0544  3E02               	addlw	2
  1902     0545  00F6               	movwf	??_fputc+2
  1903     0546  0873               	movf	fputc@fp+1,w
  1904     0547  1803               	skipnc
  1905     0548  3E01               	addlw	1
  1906     0549  3E00               	addlw	0
  1907     054A  00F7               	movwf	??_fputc+3
  1908     054B  0876               	movf	??_fputc+2,w
  1909     054C  0084               	movwf	4
  1910     054D  1783               	bsf	3,7
  1911     054E  1C77               	btfss	??_fputc+3,0
  1912     054F  1383               	bcf	3,7
  1913     0550  0800               	movf	0,w
  1914     0551  0774               	addwf	??_fputc,w
  1915     0552  00F9               	movwf	??_fputc+5
  1916     0553  0875               	movf	??_fputc+1,w
  1917     0554  00F8               	movwf	??_fputc+4
  1918     0555  1803               	skipnc
  1919     0556  0AF8               	incf	??_fputc+4,f
  1920     0557  1F80               	btfss	0,7
  1921     0558  2D5A               	goto	u820
  1922     0559  03F8               	decf	??_fputc+4,f
  1923     055A                     u820:
  1924     055A  0878               	movf	??_fputc+4,w
  1925     055B  00FA               	movwf	??_fputc+6
  1926     055C  0879               	movf	??_fputc+5,w
  1927     055D  0084               	movwf	4
  1928     055E  1783               	bsf	3,7
  1929     055F  1C7A               	btfss	??_fputc+6,0
  1930     0560  1383               	bcf	3,7
  1931     0561  0870               	movf	fputc@c,w
  1932     0562  0080               	movwf	0
  1933     0563  0872               	movf	fputc@fp,w
  1934     0564  3E02               	addlw	2
  1935     0565  00F4               	movwf	??_fputc
  1936     0566  0873               	movf	fputc@fp+1,w
  1937     0567  1803               	skipnc
  1938     0568  3E01               	addlw	1
  1939     0569  3E00               	addlw	0
  1940     056A  00F5               	movwf	??_fputc+1
  1941     056B  0874               	movf	??_fputc,w
  1942     056C  0084               	movwf	4
  1943     056D  1783               	bsf	3,7
  1944     056E  1C75               	btfss	??_fputc+1,0
  1945     056F  1383               	bcf	3,7
  1946     0570  3001               	movlw	1
  1947     0571  0780               	addwf	0,f
  1948     0572  0A84               	incf	4,f
  1949     0573  1803               	skipnc
  1950     0574  0A80               	incf	0,f
  1951     0575                     l753:
  1952     0575  0008               	return
  1953     0576                     __end_of_fputc:
  1954                           
  1955                           	psect	text5
  1956     0298                     __ptext5:	
  1957 ;; *************** function _putch *****************
  1958 ;; Defined at:
  1959 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  c               1    wreg     unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  c               1    0[COMMON] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1973 ;;      Params:         0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0
  1976 ;;      Totals:         0       0       0       0       0
  1977 ;;Total ram usage:        0 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_fputc
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986     0298                     _putch:	
  1987                           ;psect for function _putch
  1988                           
  1989     0298                     l764:	
  1990                           ;incstack = 0
  1991                           ; Regs used in _putch: [wreg]
  1992                           
  1993     0298  0008               	return
  1994     0299                     __end_of_putch:
  1995                           
  1996                           	psect	text6
  1997     02CA                     __ptext6:	
  1998 ;; *************** function _abs *****************
  1999 ;; Defined at:
  2000 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  a               2    6[COMMON] int 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  2    6[COMMON] int 
  2007 ;; Registers used:
  2008 ;;		wreg, status,2, status,0
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2014 ;;      Params:         2       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0
  2016 ;;      Temps:          2       0       0       0       0
  2017 ;;      Totals:         4       0       0       0       0
  2018 ;;Total ram usage:        4 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_vfpfcnvrt
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027     02CA                     _abs:	
  2028                           ;psect for function _abs
  2029                           
  2030     02CA                     l1228:	
  2031                           ;incstack = 0
  2032                           ; Regs used in _abs: [wreg+status,2+status,0]
  2033                           
  2034     02CA  1BF7               	btfsc	abs@a+1,7
  2035     02CB  2ACD               	goto	u831
  2036     02CC  2ACE               	goto	u830
  2037     02CD                     u831:
  2038     02CD  2ACF               	goto	l1232
  2039     02CE                     u830:
  2040     02CE                     l1230:
  2041     02CE  2ADA               	goto	l741
  2042     02CF                     l1232:
  2043     02CF  0976               	comf	abs@a,w
  2044     02D0  00F8               	movwf	??_abs
  2045     02D1  0977               	comf	abs@a+1,w
  2046     02D2  00F9               	movwf	??_abs+1
  2047     02D3  0AF8               	incf	??_abs,f
  2048     02D4  1903               	skipnz
  2049     02D5  0AF9               	incf	??_abs+1,f
  2050     02D6  0878               	movf	??_abs,w
  2051     02D7  00F6               	movwf	?_abs
  2052     02D8  0879               	movf	??_abs+1,w
  2053     02D9  00F7               	movwf	?_abs+1
  2054     02DA                     l741:
  2055     02DA  0008               	return
  2056     02DB                     __end_of_abs:
  2057                           
  2058                           	psect	text7
  2059     0422                     __ptext7:	
  2060 ;; *************** function ___awmod *****************
  2061 ;; Defined at:
  2062 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  divisor         2    0[COMMON] int 
  2065 ;;  dividend        2    2[COMMON] int 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  sign            1    5[COMMON] unsigned char 
  2068 ;;  counter         1    4[COMMON] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  2    0[COMMON] int 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2, status,0
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         4       0       0       0       0
  2079 ;;      Locals:         2       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0
  2081 ;;      Totals:         6       0       0       0       0
  2082 ;;Total ram usage:        6 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_vfpfcnvrt
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091     0422                     ___awmod:	
  2092                           ;psect for function ___awmod
  2093                           
  2094     0422                     l1176:	
  2095                           ;incstack = 0
  2096                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2097                           
  2098     0422  01F5               	clrf	___awmod@sign
  2099     0423                     l1178:
  2100     0423  1FF3               	btfss	___awmod@dividend+1,7
  2101     0424  2C26               	goto	u691
  2102     0425  2C27               	goto	u690
  2103     0426                     u691:
  2104     0426  2C2E               	goto	l1184
  2105     0427                     u690:
  2106     0427                     l1180:
  2107     0427  09F2               	comf	___awmod@dividend,f
  2108     0428  09F3               	comf	___awmod@dividend+1,f
  2109     0429  0AF2               	incf	___awmod@dividend,f
  2110     042A  1903               	skipnz
  2111     042B  0AF3               	incf	___awmod@dividend+1,f
  2112     042C                     l1182:
  2113     042C  3001               	movlw	1
  2114     042D  00F5               	movwf	___awmod@sign
  2115     042E                     l1184:
  2116     042E  1FF1               	btfss	___awmod@divisor+1,7
  2117     042F  2C31               	goto	u701
  2118     0430  2C32               	goto	u700
  2119     0431                     u701:
  2120     0431  2C37               	goto	l1188
  2121     0432                     u700:
  2122     0432                     l1186:
  2123     0432  09F0               	comf	___awmod@divisor,f
  2124     0433  09F1               	comf	___awmod@divisor+1,f
  2125     0434  0AF0               	incf	___awmod@divisor,f
  2126     0435  1903               	skipnz
  2127     0436  0AF1               	incf	___awmod@divisor+1,f
  2128     0437                     l1188:
  2129     0437  0870               	movf	___awmod@divisor,w
  2130     0438  0471               	iorwf	___awmod@divisor+1,w
  2131     0439  1903               	btfsc	3,2
  2132     043A  2C3C               	goto	u711
  2133     043B  2C3D               	goto	u710
  2134     043C                     u711:
  2135     043C  2C6A               	goto	l1206
  2136     043D                     u710:
  2137     043D                     l1190:
  2138     043D  3001               	movlw	1
  2139     043E  00F4               	movwf	___awmod@counter
  2140     043F  2C49               	goto	l1196
  2141     0440                     l1192:
  2142     0440  3001               	movlw	1
  2143     0441                     u725:
  2144     0441  1003               	clrc
  2145     0442  0DF0               	rlf	___awmod@divisor,f
  2146     0443  0DF1               	rlf	___awmod@divisor+1,f
  2147     0444  3EFF               	addlw	-1
  2148     0445  1D03               	skipz
  2149     0446  2C41               	goto	u725
  2150     0447                     l1194:
  2151     0447  3001               	movlw	1
  2152     0448  07F4               	addwf	___awmod@counter,f
  2153     0449                     l1196:
  2154     0449  1FF1               	btfss	___awmod@divisor+1,7
  2155     044A  2C4C               	goto	u731
  2156     044B  2C4D               	goto	u730
  2157     044C                     u731:
  2158     044C  2C40               	goto	l1192
  2159     044D                     u730:
  2160     044D                     l1198:
  2161     044D  0871               	movf	___awmod@divisor+1,w
  2162     044E  0273               	subwf	___awmod@dividend+1,w
  2163     044F  1D03               	skipz
  2164     0450  2C53               	goto	u745
  2165     0451  0870               	movf	___awmod@divisor,w
  2166     0452  0272               	subwf	___awmod@dividend,w
  2167     0453                     u745:
  2168     0453  1C03               	skipc
  2169     0454  2C56               	goto	u741
  2170     0455  2C57               	goto	u740
  2171     0456                     u741:
  2172     0456  2C5D               	goto	l1202
  2173     0457                     u740:
  2174     0457                     l1200:
  2175     0457  0870               	movf	___awmod@divisor,w
  2176     0458  02F2               	subwf	___awmod@dividend,f
  2177     0459  0871               	movf	___awmod@divisor+1,w
  2178     045A  1C03               	skipc
  2179     045B  03F3               	decf	___awmod@dividend+1,f
  2180     045C  02F3               	subwf	___awmod@dividend+1,f
  2181     045D                     l1202:
  2182     045D  3001               	movlw	1
  2183     045E                     u755:
  2184     045E  1003               	clrc
  2185     045F  0CF1               	rrf	___awmod@divisor+1,f
  2186     0460  0CF0               	rrf	___awmod@divisor,f
  2187     0461  3EFF               	addlw	-1
  2188     0462  1D03               	skipz
  2189     0463  2C5E               	goto	u755
  2190     0464                     l1204:
  2191     0464  3001               	movlw	1
  2192     0465  02F4               	subwf	___awmod@counter,f
  2193     0466  1D03               	btfss	3,2
  2194     0467  2C69               	goto	u761
  2195     0468  2C6A               	goto	u760
  2196     0469                     u761:
  2197     0469  2C4D               	goto	l1198
  2198     046A                     u760:
  2199     046A                     l1206:
  2200     046A  0875               	movf	___awmod@sign,w
  2201     046B  1903               	btfsc	3,2
  2202     046C  2C6E               	goto	u771
  2203     046D  2C6F               	goto	u770
  2204     046E                     u771:
  2205     046E  2C74               	goto	l1210
  2206     046F                     u770:
  2207     046F                     l1208:
  2208     046F  09F2               	comf	___awmod@dividend,f
  2209     0470  09F3               	comf	___awmod@dividend+1,f
  2210     0471  0AF2               	incf	___awmod@dividend,f
  2211     0472  1903               	skipnz
  2212     0473  0AF3               	incf	___awmod@dividend+1,f
  2213     0474                     l1210:
  2214     0474  0873               	movf	___awmod@dividend+1,w
  2215     0475  00F1               	movwf	?___awmod+1
  2216     0476  0872               	movf	___awmod@dividend,w
  2217     0477  00F0               	movwf	?___awmod
  2218     0478                     l386:
  2219     0478  0008               	return
  2220     0479                     __end_of___awmod:
  2221                           
  2222                           	psect	text8
  2223     0479                     __ptext8:	
  2224 ;; *************** function ___awdiv *****************
  2225 ;; Defined at:
  2226 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  divisor         2    0[COMMON] int 
  2229 ;;  dividend        2    2[COMMON] int 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  quotient        2    6[COMMON] int 
  2232 ;;  sign            1    5[COMMON] unsigned char 
  2233 ;;  counter         1    4[COMMON] unsigned char 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  2    0[COMMON] int 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2243 ;;      Params:         4       0       0       0       0
  2244 ;;      Locals:         4       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0
  2246 ;;      Totals:         8       0       0       0       0
  2247 ;;Total ram usage:        8 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_vfpfcnvrt
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256     0479                     ___awdiv:	
  2257                           ;psect for function ___awdiv
  2258                           
  2259     0479                     l1132:	
  2260                           ;incstack = 0
  2261                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2262                           
  2263     0479  01F5               	clrf	___awdiv@sign
  2264     047A                     l1134:
  2265     047A  1FF1               	btfss	___awdiv@divisor+1,7
  2266     047B  2C7D               	goto	u591
  2267     047C  2C7E               	goto	u590
  2268     047D                     u591:
  2269     047D  2C85               	goto	l1140
  2270     047E                     u590:
  2271     047E                     l1136:
  2272     047E  09F0               	comf	___awdiv@divisor,f
  2273     047F  09F1               	comf	___awdiv@divisor+1,f
  2274     0480  0AF0               	incf	___awdiv@divisor,f
  2275     0481  1903               	skipnz
  2276     0482  0AF1               	incf	___awdiv@divisor+1,f
  2277     0483                     l1138:
  2278     0483  3001               	movlw	1
  2279     0484  00F5               	movwf	___awdiv@sign
  2280     0485                     l1140:
  2281     0485  1FF3               	btfss	___awdiv@dividend+1,7
  2282     0486  2C88               	goto	u601
  2283     0487  2C89               	goto	u600
  2284     0488                     u601:
  2285     0488  2C90               	goto	l1146
  2286     0489                     u600:
  2287     0489                     l1142:
  2288     0489  09F2               	comf	___awdiv@dividend,f
  2289     048A  09F3               	comf	___awdiv@dividend+1,f
  2290     048B  0AF2               	incf	___awdiv@dividend,f
  2291     048C  1903               	skipnz
  2292     048D  0AF3               	incf	___awdiv@dividend+1,f
  2293     048E                     l1144:
  2294     048E  3001               	movlw	1
  2295     048F  06F5               	xorwf	___awdiv@sign,f
  2296     0490                     l1146:
  2297     0490  01F6               	clrf	___awdiv@quotient
  2298     0491  01F7               	clrf	___awdiv@quotient+1
  2299     0492                     l1148:
  2300     0492  0870               	movf	___awdiv@divisor,w
  2301     0493  0471               	iorwf	___awdiv@divisor+1,w
  2302     0494  1903               	btfsc	3,2
  2303     0495  2C97               	goto	u611
  2304     0496  2C98               	goto	u610
  2305     0497                     u611:
  2306     0497  2CCD               	goto	l1168
  2307     0498                     u610:
  2308     0498                     l1150:
  2309     0498  3001               	movlw	1
  2310     0499  00F4               	movwf	___awdiv@counter
  2311     049A  2CA4               	goto	l1156
  2312     049B                     l1152:
  2313     049B  3001               	movlw	1
  2314     049C                     u625:
  2315     049C  1003               	clrc
  2316     049D  0DF0               	rlf	___awdiv@divisor,f
  2317     049E  0DF1               	rlf	___awdiv@divisor+1,f
  2318     049F  3EFF               	addlw	-1
  2319     04A0  1D03               	skipz
  2320     04A1  2C9C               	goto	u625
  2321     04A2                     l1154:
  2322     04A2  3001               	movlw	1
  2323     04A3  07F4               	addwf	___awdiv@counter,f
  2324     04A4                     l1156:
  2325     04A4  1FF1               	btfss	___awdiv@divisor+1,7
  2326     04A5  2CA7               	goto	u631
  2327     04A6  2CA8               	goto	u630
  2328     04A7                     u631:
  2329     04A7  2C9B               	goto	l1152
  2330     04A8                     u630:
  2331     04A8                     l1158:
  2332     04A8  3001               	movlw	1
  2333     04A9                     u645:
  2334     04A9  1003               	clrc
  2335     04AA  0DF6               	rlf	___awdiv@quotient,f
  2336     04AB  0DF7               	rlf	___awdiv@quotient+1,f
  2337     04AC  3EFF               	addlw	-1
  2338     04AD  1D03               	skipz
  2339     04AE  2CA9               	goto	u645
  2340     04AF  0871               	movf	___awdiv@divisor+1,w
  2341     04B0  0273               	subwf	___awdiv@dividend+1,w
  2342     04B1  1D03               	skipz
  2343     04B2  2CB5               	goto	u655
  2344     04B3  0870               	movf	___awdiv@divisor,w
  2345     04B4  0272               	subwf	___awdiv@dividend,w
  2346     04B5                     u655:
  2347     04B5  1C03               	skipc
  2348     04B6  2CB8               	goto	u651
  2349     04B7  2CB9               	goto	u650
  2350     04B8                     u651:
  2351     04B8  2CC0               	goto	l1164
  2352     04B9                     u650:
  2353     04B9                     l1160:
  2354     04B9  0870               	movf	___awdiv@divisor,w
  2355     04BA  02F2               	subwf	___awdiv@dividend,f
  2356     04BB  0871               	movf	___awdiv@divisor+1,w
  2357     04BC  1C03               	skipc
  2358     04BD  03F3               	decf	___awdiv@dividend+1,f
  2359     04BE  02F3               	subwf	___awdiv@dividend+1,f
  2360     04BF                     l1162:
  2361     04BF  1476               	bsf	___awdiv@quotient,0
  2362     04C0                     l1164:
  2363     04C0  3001               	movlw	1
  2364     04C1                     u665:
  2365     04C1  1003               	clrc
  2366     04C2  0CF1               	rrf	___awdiv@divisor+1,f
  2367     04C3  0CF0               	rrf	___awdiv@divisor,f
  2368     04C4  3EFF               	addlw	-1
  2369     04C5  1D03               	skipz
  2370     04C6  2CC1               	goto	u665
  2371     04C7                     l1166:
  2372     04C7  3001               	movlw	1
  2373     04C8  02F4               	subwf	___awdiv@counter,f
  2374     04C9  1D03               	btfss	3,2
  2375     04CA  2CCC               	goto	u671
  2376     04CB  2CCD               	goto	u670
  2377     04CC                     u671:
  2378     04CC  2CA8               	goto	l1158
  2379     04CD                     u670:
  2380     04CD                     l1168:
  2381     04CD  0875               	movf	___awdiv@sign,w
  2382     04CE  1903               	btfsc	3,2
  2383     04CF  2CD1               	goto	u681
  2384     04D0  2CD2               	goto	u680
  2385     04D1                     u681:
  2386     04D1  2CD7               	goto	l1172
  2387     04D2                     u680:
  2388     04D2                     l1170:
  2389     04D2  09F6               	comf	___awdiv@quotient,f
  2390     04D3  09F7               	comf	___awdiv@quotient+1,f
  2391     04D4  0AF6               	incf	___awdiv@quotient,f
  2392     04D5  1903               	skipnz
  2393     04D6  0AF7               	incf	___awdiv@quotient+1,f
  2394     04D7                     l1172:
  2395     04D7  0877               	movf	___awdiv@quotient+1,w
  2396     04D8  00F1               	movwf	?___awdiv+1
  2397     04D9  0876               	movf	___awdiv@quotient,w
  2398     04DA  00F0               	movwf	?___awdiv
  2399     04DB                     l373:
  2400     04DB  0008               	return
  2401     04DC                     __end_of___awdiv:
  2402                           
  2403                           	psect	text9
  2404     037C                     __ptext9:	
  2405 ;; *************** function _lcd_string *****************
  2406 ;; Defined at:
  2407 ;;		line 144 in file "smart_manhole_monitoring_system.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  str             2    3[COMMON] PTR const unsigned char 
  2410 ;;		 -> STR_8(17), STR_7(17), main@waterLevel(16), main@tiltStatus(16), 
  2411 ;;  num             1    5[COMMON] unsigned char 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  i               1    6[COMMON] unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2423 ;;      Params:         3       0       0       0       0
  2424 ;;      Locals:         1       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0
  2426 ;;      Totals:         4       0       0       0       0
  2427 ;;Total ram usage:        4 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 1
  2430 ;; This function calls:
  2431 ;;		_lcd_data
  2432 ;; This function is called by:
  2433 ;;		_main
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437     037C                     _lcd_string:	
  2438                           ;psect for function _lcd_string
  2439                           
  2440     037C                     l1426:	
  2441                           ;incstack = 0
  2442                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2443                           
  2444                           
  2445                           ;smart_manhole_monitoring_system.c: 144: void lcd_string(const unsigned char* str, unsig
      +                          ned char num);smart_manhole_monitoring_system.c: 145: {;smart_manhole_monitoring_system.
      +                          c: 146:     unsigned char i;;smart_manhole_monitoring_system.c: 147:     for (i = 0; i <
      +                           num && str[i] != '\0'; i++)
  2446     037C  01F6               	clrf	lcd_string@i
  2447     037D  2B91               	goto	l1432
  2448     037E                     l1428:
  2449                           
  2450                           ;smart_manhole_monitoring_system.c: 148:     {;smart_manhole_monitoring_system.c: 149:  
      +                                 lcd_data(str[i]);
  2451     037E  0876               	movf	lcd_string@i,w
  2452     037F  0773               	addwf	lcd_string@str,w
  2453     0380  0084               	movwf	4
  2454     0381  0874               	movf	lcd_string@str+1,w
  2455     0382  1803               	skipnc
  2456     0383  0A74               	incf	lcd_string@str+1,w
  2457     0384  00FF               	movwf	btemp+1
  2458     0385  120A  118A  2003  120A  118A  	fcall	stringtab
  2459     038A  120A  118A  2304  120A  118A  	fcall	_lcd_data
  2460     038F                     l1430:
  2461                           
  2462                           ;smart_manhole_monitoring_system.c: 150:     }
  2463     038F  3001               	movlw	1
  2464     0390  07F6               	addwf	lcd_string@i,f
  2465     0391                     l1432:
  2466     0391  0875               	movf	lcd_string@num,w
  2467     0392  0276               	subwf	lcd_string@i,w
  2468     0393  1803               	skipnc
  2469     0394  2B96               	goto	u1111
  2470     0395  2B97               	goto	u1110
  2471     0396                     u1111:
  2472     0396  2BAA               	goto	l101
  2473     0397                     u1110:
  2474     0397                     l1434:
  2475     0397  0876               	movf	lcd_string@i,w
  2476     0398  0773               	addwf	lcd_string@str,w
  2477     0399  0084               	movwf	4
  2478     039A  0874               	movf	lcd_string@str+1,w
  2479     039B  1803               	skipnc
  2480     039C  0A74               	incf	lcd_string@str+1,w
  2481     039D  1283               	bcf	3,5	;RP0=0, select bank0
  2482     039E  1303               	bcf	3,6	;RP1=0, select bank0
  2483     039F  00FF               	movwf	btemp+1
  2484     03A0  120A  118A  2003  120A  118A  	fcall	stringtab
  2485     03A5  3A00               	xorlw	0
  2486     03A6  1D03               	skipz
  2487     03A7  2BA9               	goto	u1121
  2488     03A8  2BAA               	goto	u1120
  2489     03A9                     u1121:
  2490     03A9  2B7E               	goto	l1428
  2491     03AA                     u1120:
  2492     03AA                     l101:
  2493     03AA  0008               	return
  2494     03AB                     __end_of_lcd_string:
  2495                           
  2496                           	psect	text10
  2497     0304                     __ptext10:	
  2498 ;; *************** function _lcd_data *****************
  2499 ;; Defined at:
  2500 ;;		line 134 in file "smart_manhole_monitoring_system.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  data            1    wreg     unsigned char 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  data            1    2[COMMON] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2514 ;;      Params:         0       0       0       0       0
  2515 ;;      Locals:         1       0       0       0       0
  2516 ;;      Temps:          2       0       0       0       0
  2517 ;;      Totals:         3       0       0       0       0
  2518 ;;Total ram usage:        3 bytes
  2519 ;; Hardware stack levels used: 1
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_lcd_string
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527     0304                     _lcd_data:	
  2528                           ;psect for function _lcd_data
  2529                           
  2530                           
  2531                           ;incstack = 0
  2532                           ; Regs used in _lcd_data: [wreg]
  2533                           ;lcd_data@data stored from wreg
  2534     0304  00F2               	movwf	lcd_data@data
  2535     0305                     l1326:
  2536                           
  2537                           ;smart_manhole_monitoring_system.c: 134: void lcd_data(unsigned char data);smart_manhole
      +                          _monitoring_system.c: 135: {;smart_manhole_monitoring_system.c: 136:     PORTD = data;
  2538     0305  0872               	movf	lcd_data@data,w
  2539     0306  1283               	bcf	3,5	;RP0=0, select bank0
  2540     0307  1303               	bcf	3,6	;RP1=0, select bank0
  2541     0308  0088               	movwf	8	;volatile
  2542     0309                     l1328:
  2543                           
  2544                           ;smart_manhole_monitoring_system.c: 137:     PORTCbits.RC0 = 1;
  2545     0309  1407               	bsf	7,0	;volatile
  2546     030A                     l1330:
  2547                           
  2548                           ;smart_manhole_monitoring_system.c: 138:     PORTCbits.RC1 = 0;
  2549     030A  1087               	bcf	7,1	;volatile
  2550     030B                     l1332:
  2551                           
  2552                           ;smart_manhole_monitoring_system.c: 139:     PORTCbits.RC2 = 1;
  2553     030B  1507               	bsf	7,2	;volatile
  2554                           
  2555                           ;smart_manhole_monitoring_system.c: 140:     _delay((unsigned long)((5)*(20000000/4000.0
      +                          )));
  2556     030C  3021               	movlw	33
  2557     030D  00F1               	movwf	??_lcd_data+1
  2558     030E  3076               	movlw	118
  2559     030F  00F0               	movwf	??_lcd_data
  2560     0310                     u1187:
  2561     0310  0BF0               	decfsz	??_lcd_data,f
  2562     0311  2B10               	goto	u1187
  2563     0312  0BF1               	decfsz	??_lcd_data+1,f
  2564     0313  2B10               	goto	u1187
  2565     0314  0000               	nop
  2566     0315                     l1334:
  2567                           
  2568                           ;smart_manhole_monitoring_system.c: 141:     PORTCbits.RC2 = 0;
  2569     0315  1283               	bcf	3,5	;RP0=0, select bank0
  2570     0316  1303               	bcf	3,6	;RP1=0, select bank0
  2571     0317  1107               	bcf	7,2	;volatile
  2572     0318                     l93:
  2573     0318  0008               	return
  2574     0319                     __end_of_lcd_data:
  2575                           
  2576                           	psect	text11
  2577     0319                     __ptext11:	
  2578 ;; *************** function _lcd_initialize *****************
  2579 ;; Defined at:
  2580 ;;		line 116 in file "smart_manhole_monitoring_system.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;		None
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0, pclath, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2594 ;;      Params:         0       0       0       0       0
  2595 ;;      Locals:         0       0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0
  2597 ;;      Totals:         0       0       0       0       0
  2598 ;;Total ram usage:        0 bytes
  2599 ;; Hardware stack levels used: 1
  2600 ;; Hardware stack levels required when called: 1
  2601 ;; This function calls:
  2602 ;;		_lcd_command
  2603 ;; This function is called by:
  2604 ;;		_main
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608     0319                     _lcd_initialize:	
  2609                           ;psect for function _lcd_initialize
  2610                           
  2611     0319                     l1376:	
  2612                           ;incstack = 0
  2613                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  2614                           
  2615                           
  2616                           ;smart_manhole_monitoring_system.c: 118:     lcd_command(0x38);
  2617     0319  3038               	movlw	56
  2618     031A  120A  118A  22EF  120A  118A  	fcall	_lcd_command
  2619                           
  2620                           ;smart_manhole_monitoring_system.c: 119:     lcd_command(0x06);
  2621     031F  3006               	movlw	6
  2622     0320  120A  118A  22EF  120A  118A  	fcall	_lcd_command
  2623                           
  2624                           ;smart_manhole_monitoring_system.c: 120:     lcd_command(0x0C);
  2625     0325  300C               	movlw	12
  2626     0326  120A  118A  22EF  120A  118A  	fcall	_lcd_command
  2627                           
  2628                           ;smart_manhole_monitoring_system.c: 121:     lcd_command(0x01);
  2629     032B  3001               	movlw	1
  2630     032C  120A  118A  22EF  120A  118A  	fcall	_lcd_command
  2631     0331                     l87:
  2632     0331  0008               	return
  2633     0332                     __end_of_lcd_initialize:
  2634                           
  2635                           	psect	text12
  2636     02EF                     __ptext12:	
  2637 ;; *************** function _lcd_command *****************
  2638 ;; Defined at:
  2639 ;;		line 124 in file "smart_manhole_monitoring_system.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  cmd             1    wreg     unsigned char 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  cmd             1    2[COMMON] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2653 ;;      Params:         0       0       0       0       0
  2654 ;;      Locals:         1       0       0       0       0
  2655 ;;      Temps:          2       0       0       0       0
  2656 ;;      Totals:         3       0       0       0       0
  2657 ;;Total ram usage:        3 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;;		_lcd_initialize
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667     02EF                     _lcd_command:	
  2668                           ;psect for function _lcd_command
  2669                           
  2670                           
  2671                           ;incstack = 0
  2672                           ; Regs used in _lcd_command: [wreg]
  2673                           ;lcd_command@cmd stored from wreg
  2674     02EF  00F2               	movwf	lcd_command@cmd
  2675     02F0                     l1316:
  2676                           
  2677                           ;smart_manhole_monitoring_system.c: 124: void lcd_command(unsigned char cmd);smart_manho
      +                          le_monitoring_system.c: 125: {;smart_manhole_monitoring_system.c: 126:     PORTD = cmd;
  2678     02F0  0872               	movf	lcd_command@cmd,w
  2679     02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2680     02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2681     02F3  0088               	movwf	8	;volatile
  2682     02F4                     l1318:
  2683                           
  2684                           ;smart_manhole_monitoring_system.c: 127:     PORTCbits.RC0 = 0;
  2685     02F4  1007               	bcf	7,0	;volatile
  2686     02F5                     l1320:
  2687                           
  2688                           ;smart_manhole_monitoring_system.c: 128:     PORTCbits.RC1 = 0;
  2689     02F5  1087               	bcf	7,1	;volatile
  2690     02F6                     l1322:
  2691                           
  2692                           ;smart_manhole_monitoring_system.c: 129:     PORTCbits.RC2 = 1;
  2693     02F6  1507               	bsf	7,2	;volatile
  2694                           
  2695                           ;smart_manhole_monitoring_system.c: 130:     _delay((unsigned long)((5)*(20000000/4000.0
      +                          )));
  2696     02F7  3021               	movlw	33
  2697     02F8  00F1               	movwf	??_lcd_command+1
  2698     02F9  3076               	movlw	118
  2699     02FA  00F0               	movwf	??_lcd_command
  2700     02FB                     u1197:
  2701     02FB  0BF0               	decfsz	??_lcd_command,f
  2702     02FC  2AFB               	goto	u1197
  2703     02FD  0BF1               	decfsz	??_lcd_command+1,f
  2704     02FE  2AFB               	goto	u1197
  2705     02FF  0000               	nop
  2706     0300                     l1324:
  2707                           
  2708                           ;smart_manhole_monitoring_system.c: 131:     PORTCbits.RC2 = 0;
  2709     0300  1283               	bcf	3,5	;RP0=0, select bank0
  2710     0301  1303               	bcf	3,6	;RP1=0, select bank0
  2711     0302  1107               	bcf	7,2	;volatile
  2712     0303                     l90:
  2713     0303  0008               	return
  2714     0304                     __end_of_lcd_command:
  2715                           
  2716                           	psect	text13
  2717     02DB                     __ptext13:	
  2718 ;; *************** function _UART_Write_Text *****************
  2719 ;; Defined at:
  2720 ;;		line 210 in file "smart_manhole_monitoring_system.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  text            1    1[COMMON] PTR const unsigned char 
  2723 ;;		 -> main@uartBuffer(64), 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2735 ;;      Params:         1       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0
  2738 ;;      Totals:         1       0       0       0       0
  2739 ;;Total ram usage:        1 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 1
  2742 ;; This function calls:
  2743 ;;		_UART_Write
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749     02DB                     _UART_Write_Text:	
  2750                           ;psect for function _UART_Write_Text
  2751                           
  2752     02DB                     l1436:	
  2753                           ;incstack = 0
  2754                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2755                           
  2756                           
  2757                           ;smart_manhole_monitoring_system.c: 210: void UART_Write_Text(const char *text);smart_ma
      +                          nhole_monitoring_system.c: 211: {;smart_manhole_monitoring_system.c: 212:     while (*te
      +                          xt)
  2758     02DB  2AE6               	goto	l1442
  2759     02DC                     l1438:
  2760                           
  2761                           ;smart_manhole_monitoring_system.c: 213:     {;smart_manhole_monitoring_system.c: 214:  
      +                                 UART_Write(*text);
  2762     02DC  0871               	movf	UART_Write_Text@text,w
  2763     02DD  0084               	movwf	4
  2764     02DE  0800               	movf	0,w
  2765     02DF  120A  118A  22AF  120A  118A  	fcall	_UART_Write
  2766     02E4                     l1440:
  2767                           
  2768                           ;smart_manhole_monitoring_system.c: 215:         text++;
  2769     02E4  3001               	movlw	1
  2770     02E5  07F1               	addwf	UART_Write_Text@text,f
  2771     02E6                     l1442:
  2772                           
  2773                           ;smart_manhole_monitoring_system.c: 212:     while (*text)
  2774     02E6  0871               	movf	UART_Write_Text@text,w
  2775     02E7  0084               	movwf	4
  2776     02E8  1383               	bcf	3,7	;select IRP bank0
  2777     02E9  0800               	movf	0,w
  2778     02EA  1D03               	btfss	3,2
  2779     02EB  2AED               	goto	u1131
  2780     02EC  2AEE               	goto	u1130
  2781     02ED                     u1131:
  2782     02ED  2ADC               	goto	l1438
  2783     02EE                     u1130:
  2784     02EE                     l128:
  2785     02EE  0008               	return
  2786     02EF                     __end_of_UART_Write_Text:
  2787                           
  2788                           	psect	text14
  2789     02AF                     __ptext14:	
  2790 ;; *************** function _UART_Write *****************
  2791 ;; Defined at:
  2792 ;;		line 219 in file "smart_manhole_monitoring_system.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  data            1    wreg     unsigned char 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  data            1    0[COMMON] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2806 ;;      Params:         0       0       0       0       0
  2807 ;;      Locals:         1       0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0
  2809 ;;      Totals:         1       0       0       0       0
  2810 ;;Total ram usage:        1 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_UART_Write_Text
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819     02AF                     _UART_Write:	
  2820                           ;psect for function _UART_Write
  2821                           
  2822                           
  2823                           ;incstack = 0
  2824                           ; Regs used in _UART_Write: [wreg]
  2825                           ;UART_Write@data stored from wreg
  2826     02AF  00F0               	movwf	UART_Write@data
  2827     02B0                     l1336:
  2828     02B0                     l131:	
  2829                           ;smart_manhole_monitoring_system.c: 219: void UART_Write(char data);smart_manhole_monito
      +                          ring_system.c: 220: {;smart_manhole_monitoring_system.c: 221:     while (!TXSTAbits.TRMT
      +                          );
  2830                           
  2831     02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2832     02B1  1303               	bcf	3,6	;RP1=0, select bank1
  2833     02B2  1C98               	btfss	24,1	;volatile
  2834     02B3  2AB5               	goto	u1001
  2835     02B4  2AB6               	goto	u1000
  2836     02B5                     u1001:
  2837     02B5  2AB0               	goto	l131
  2838     02B6                     u1000:
  2839     02B6                     l1338:
  2840                           
  2841                           ;smart_manhole_monitoring_system.c: 222:     TXREG = data;
  2842     02B6  0870               	movf	UART_Write@data,w
  2843     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2844     02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2845     02B9  0099               	movwf	25	;volatile
  2846     02BA                     l134:
  2847     02BA  0008               	return
  2848     02BB                     __end_of_UART_Write:
  2849                           
  2850                           	psect	text15
  2851     02A5                     __ptext15:	
  2852 ;; *************** function _UART_Init *****************
  2853 ;; Defined at:
  2854 ;;		line 199 in file "smart_manhole_monitoring_system.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;		None
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		None
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2868 ;;      Params:         0       0       0       0       0
  2869 ;;      Locals:         0       0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0
  2871 ;;      Totals:         0       0       0       0       0
  2872 ;;Total ram usage:        0 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881     02A5                     _UART_Init:	
  2882                           ;psect for function _UART_Init
  2883                           
  2884     02A5                     l1380:	
  2885                           ;incstack = 0
  2886                           ; Regs used in _UART_Init: []
  2887                           
  2888                           
  2889                           ;smart_manhole_monitoring_system.c: 201:     SPBRG = 31;
  2890     02A5  301F               	movlw	31
  2891     02A6  1683               	bsf	3,5	;RP0=1, select bank1
  2892     02A7  1303               	bcf	3,6	;RP1=0, select bank1
  2893     02A8  0099               	movwf	25	;volatile
  2894                           
  2895                           ;smart_manhole_monitoring_system.c: 202:     TXSTAbits.BRGH = 1;
  2896     02A9  1518               	bsf	24,2	;volatile
  2897                           
  2898                           ;smart_manhole_monitoring_system.c: 206:     TXSTAbits.TXEN = 1;
  2899     02AA  1698               	bsf	24,5	;volatile
  2900                           
  2901                           ;smart_manhole_monitoring_system.c: 207:     RCSTAbits.SPEN = 1;
  2902     02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2903     02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2904     02AD  1798               	bsf	24,7	;volatile
  2905     02AE                     l122:
  2906     02AE  0008               	return
  2907     02AF                     __end_of_UART_Init:
  2908                           
  2909                           	psect	text16
  2910     02BB                     __ptext16:	
  2911 ;; *************** function _Tilt_Sensor_Read *****************
  2912 ;; Defined at:
  2913 ;;		line 192 in file "smart_manhole_monitoring_system.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  2    0[COMMON] int 
  2920 ;; Registers used:
  2921 ;;		wreg, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2927 ;;      Params:         2       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0
  2929 ;;      Temps:          2       0       0       0       0
  2930 ;;      Totals:         4       0       0       0       0
  2931 ;;Total ram usage:        4 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_main
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940     02BB                     _Tilt_Sensor_Read:	
  2941                           ;psect for function _Tilt_Sensor_Read
  2942                           
  2943     02BB                     l1382:	
  2944                           ;incstack = 0
  2945                           ; Regs used in _Tilt_Sensor_Read: [wreg+status,0]
  2946                           
  2947                           
  2948                           ;smart_manhole_monitoring_system.c: 194:     return RB2;
  2949     02BB  1003               	clrc
  2950     02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2951     02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2952     02BE  1906               	btfsc	6,2	;volatile
  2953     02BF  1403               	setc
  2954     02C0  3000               	movlw	0
  2955     02C1  1803               	skipnc
  2956     02C2  3001               	movlw	1
  2957     02C3  00F2               	movwf	??_Tilt_Sensor_Read
  2958     02C4  01F3               	clrf	??_Tilt_Sensor_Read+1
  2959     02C5  0872               	movf	??_Tilt_Sensor_Read,w
  2960     02C6  00F0               	movwf	?_Tilt_Sensor_Read
  2961     02C7  0873               	movf	??_Tilt_Sensor_Read+1,w
  2962     02C8  00F1               	movwf	?_Tilt_Sensor_Read+1
  2963     02C9                     l119:
  2964     02C9  0008               	return
  2965     02CA                     __end_of_Tilt_Sensor_Read:
  2966                           
  2967                           	psect	text17
  2968     0297                     __ptext17:	
  2969 ;; *************** function _Tilt_Sensor_Init *****************
  2970 ;; Defined at:
  2971 ;;		line 187 in file "smart_manhole_monitoring_system.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		None
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2985 ;;      Params:         0       0       0       0       0
  2986 ;;      Locals:         0       0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0
  2988 ;;      Totals:         0       0       0       0       0
  2989 ;;Total ram usage:        0 bytes
  2990 ;; Hardware stack levels used: 1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998     0297                     _Tilt_Sensor_Init:	
  2999                           ;psect for function _Tilt_Sensor_Init
  3000                           
  3001     0297                     l116:	
  3002                           ;incstack = 0
  3003                           ; Regs used in _Tilt_Sensor_Init: []
  3004                           
  3005     0297  0008               	return
  3006     0298                     __end_of_Tilt_Sensor_Init:
  3007                           
  3008                           	psect	text18
  3009     03AB                     __ptext18:	
  3010 ;; *************** function _HC_SR04_Read *****************
  3011 ;; Defined at:
  3012 ;;		line 160 in file "smart_manhole_monitoring_system.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  distance        2   12[COMMON] int 
  3017 ;;  time            2   10[COMMON] unsigned int 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  2    7[COMMON] int 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0, pclath, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3027 ;;      Params:         2       0       0       0       0
  3028 ;;      Locals:         4       0       0       0       0
  3029 ;;      Temps:          1       0       0       0       0
  3030 ;;      Totals:         7       0       0       0       0
  3031 ;;Total ram usage:        7 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 1
  3034 ;; This function calls:
  3035 ;;		___lwdiv
  3036 ;; This function is called by:
  3037 ;;		_main
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041     03AB                     _HC_SR04_Read:	
  3042                           ;psect for function _HC_SR04_Read
  3043                           
  3044     03AB                     l1400:	
  3045                           ;incstack = 0
  3046                           ; Regs used in _HC_SR04_Read: [wreg+status,2+status,0+pclath+cstack]
  3047                           
  3048                           
  3049                           ;smart_manhole_monitoring_system.c: 162:     unsigned int time;;smart_manhole_monitoring
      +                          _system.c: 163:     int distance;;smart_manhole_monitoring_system.c: 165:     RB0 = 1;
  3050     03AB  1283               	bcf	3,5	;RP0=0, select bank0
  3051     03AC  1303               	bcf	3,6	;RP1=0, select bank0
  3052     03AD  1406               	bsf	6,0	;volatile
  3053     03AE                     l1402:
  3054                           
  3055                           ;smart_manhole_monitoring_system.c: 166:     _delay((unsigned long)((10)*(20000000/40000
      +                          00.0)));
  3056     03AE  3010               	movlw	16
  3057     03AF  00F9               	movwf	??_HC_SR04_Read
  3058     03B0                     u1207:
  3059     03B0  0BF9               	decfsz	??_HC_SR04_Read,f
  3060     03B1  2BB0               	goto	u1207
  3061     03B2  0000               	nop
  3062     03B3                     l1404:
  3063                           
  3064                           ;smart_manhole_monitoring_system.c: 167:     RB0 = 0;
  3065     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  3066     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  3067     03B5  1006               	bcf	6,0	;volatile
  3068     03B6                     l107:	
  3069                           ;smart_manhole_monitoring_system.c: 169:     while (!RB1);
  3070                           
  3071     03B6  1C86               	btfss	6,1	;volatile
  3072     03B7  2BB9               	goto	u1091
  3073     03B8  2BBA               	goto	u1090
  3074     03B9                     u1091:
  3075     03B9  2BB6               	goto	l107
  3076     03BA                     u1090:
  3077     03BA                     l1406:
  3078                           
  3079                           ;smart_manhole_monitoring_system.c: 170:     TMR1H = 0;
  3080     03BA  018F               	clrf	15	;volatile
  3081                           
  3082                           ;smart_manhole_monitoring_system.c: 171:     TMR1L = 0;
  3083     03BB  018E               	clrf	14	;volatile
  3084     03BC                     l1408:
  3085                           
  3086                           ;smart_manhole_monitoring_system.c: 172:     T1CKPS0 = 0; T1CKPS1 = 0;
  3087     03BC  1210               	bcf	16,4	;volatile
  3088     03BD                     l1410:
  3089     03BD  1290               	bcf	16,5	;volatile
  3090     03BE                     l1412:
  3091                           
  3092                           ;smart_manhole_monitoring_system.c: 173:     T1OSCEN = 0;
  3093     03BE  1190               	bcf	16,3	;volatile
  3094     03BF                     l1414:
  3095                           
  3096                           ;smart_manhole_monitoring_system.c: 174:     TMR1CS = 0;
  3097     03BF  1090               	bcf	16,1	;volatile
  3098     03C0                     l1416:
  3099                           
  3100                           ;smart_manhole_monitoring_system.c: 175:     TMR1ON = 1;
  3101     03C0  1410               	bsf	16,0	;volatile
  3102     03C1                     l110:	
  3103                           ;smart_manhole_monitoring_system.c: 177:     while (RB1);
  3104                           
  3105     03C1  1886               	btfsc	6,1	;volatile
  3106     03C2  2BC4               	goto	u1101
  3107     03C3  2BC5               	goto	u1100
  3108     03C4                     u1101:
  3109     03C4  2BC1               	goto	l110
  3110     03C5                     u1100:
  3111     03C5                     l112:
  3112                           
  3113                           ;smart_manhole_monitoring_system.c: 179:     TMR1ON = 0;
  3114     03C5  1010               	bcf	16,0	;volatile
  3115     03C6                     l1418:
  3116                           
  3117                           ;smart_manhole_monitoring_system.c: 180:     time = (TMR1L | (TMR1H << 8));
  3118     03C6  080F               	movf	15,w	;volatile
  3119     03C7  00FB               	movwf	HC_SR04_Read@time+1
  3120     03C8  080E               	movf	14,w	;volatile
  3121     03C9  00FA               	movwf	HC_SR04_Read@time
  3122     03CA                     l1420:
  3123                           
  3124                           ;smart_manhole_monitoring_system.c: 181:     distance = (int)(time / 294);
  3125     03CA  3026               	movlw	38
  3126     03CB  00F0               	movwf	___lwdiv@divisor
  3127     03CC  3001               	movlw	1
  3128     03CD  00F1               	movwf	___lwdiv@divisor+1
  3129     03CE  087B               	movf	HC_SR04_Read@time+1,w
  3130     03CF  00F3               	movwf	___lwdiv@dividend+1
  3131     03D0  087A               	movf	HC_SR04_Read@time,w
  3132     03D1  00F2               	movwf	___lwdiv@dividend
  3133     03D2  120A  118A  23E0  120A  118A  	fcall	___lwdiv
  3134     03D7  0871               	movf	?___lwdiv+1,w
  3135     03D8  00FD               	movwf	HC_SR04_Read@distance+1
  3136     03D9  0870               	movf	?___lwdiv,w
  3137     03DA  00FC               	movwf	HC_SR04_Read@distance
  3138     03DB                     l1422:
  3139                           
  3140                           ;smart_manhole_monitoring_system.c: 182:     return distance;
  3141     03DB  087D               	movf	HC_SR04_Read@distance+1,w
  3142     03DC  00F8               	movwf	?_HC_SR04_Read+1
  3143     03DD  087C               	movf	HC_SR04_Read@distance,w
  3144     03DE  00F7               	movwf	?_HC_SR04_Read
  3145     03DF                     l113:
  3146     03DF  0008               	return
  3147     03E0                     __end_of_HC_SR04_Read:
  3148                           
  3149                           	psect	text19
  3150     03E0                     __ptext19:	
  3151 ;; *************** function ___lwdiv *****************
  3152 ;; Defined at:
  3153 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  divisor         2    0[COMMON] unsigned int 
  3156 ;;  dividend        2    2[COMMON] unsigned int 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  quotient        2    4[COMMON] unsigned int 
  3159 ;;  counter         1    6[COMMON] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  2    0[COMMON] unsigned int 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         4       0       0       0       0
  3170 ;;      Locals:         3       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0
  3172 ;;      Totals:         7       0       0       0       0
  3173 ;;Total ram usage:        7 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_HC_SR04_Read
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182     03E0                     ___lwdiv:	
  3183                           ;psect for function ___lwdiv
  3184                           
  3185     03E0                     l1340:	
  3186                           ;incstack = 0
  3187                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3188                           
  3189     03E0  01F4               	clrf	___lwdiv@quotient
  3190     03E1  01F5               	clrf	___lwdiv@quotient+1
  3191     03E2                     l1342:
  3192     03E2  0870               	movf	___lwdiv@divisor,w
  3193     03E3  0471               	iorwf	___lwdiv@divisor+1,w
  3194     03E4  1903               	btfsc	3,2
  3195     03E5  2BE7               	goto	u1011
  3196     03E6  2BE8               	goto	u1010
  3197     03E7                     u1011:
  3198     03E7  2C1D               	goto	l1362
  3199     03E8                     u1010:
  3200     03E8                     l1344:
  3201     03E8  3001               	movlw	1
  3202     03E9  00F6               	movwf	___lwdiv@counter
  3203     03EA  2BF4               	goto	l1350
  3204     03EB                     l1346:
  3205     03EB  3001               	movlw	1
  3206     03EC                     u1025:
  3207     03EC  1003               	clrc
  3208     03ED  0DF0               	rlf	___lwdiv@divisor,f
  3209     03EE  0DF1               	rlf	___lwdiv@divisor+1,f
  3210     03EF  3EFF               	addlw	-1
  3211     03F0  1D03               	skipz
  3212     03F1  2BEC               	goto	u1025
  3213     03F2                     l1348:
  3214     03F2  3001               	movlw	1
  3215     03F3  07F6               	addwf	___lwdiv@counter,f
  3216     03F4                     l1350:
  3217     03F4  1FF1               	btfss	___lwdiv@divisor+1,7
  3218     03F5  2BF7               	goto	u1031
  3219     03F6  2BF8               	goto	u1030
  3220     03F7                     u1031:
  3221     03F7  2BEB               	goto	l1346
  3222     03F8                     u1030:
  3223     03F8                     l1352:
  3224     03F8  3001               	movlw	1
  3225     03F9                     u1045:
  3226     03F9  1003               	clrc
  3227     03FA  0DF4               	rlf	___lwdiv@quotient,f
  3228     03FB  0DF5               	rlf	___lwdiv@quotient+1,f
  3229     03FC  3EFF               	addlw	-1
  3230     03FD  1D03               	skipz
  3231     03FE  2BF9               	goto	u1045
  3232     03FF  0871               	movf	___lwdiv@divisor+1,w
  3233     0400  0273               	subwf	___lwdiv@dividend+1,w
  3234     0401  1D03               	skipz
  3235     0402  2C05               	goto	u1055
  3236     0403  0870               	movf	___lwdiv@divisor,w
  3237     0404  0272               	subwf	___lwdiv@dividend,w
  3238     0405                     u1055:
  3239     0405  1C03               	skipc
  3240     0406  2C08               	goto	u1051
  3241     0407  2C09               	goto	u1050
  3242     0408                     u1051:
  3243     0408  2C10               	goto	l1358
  3244     0409                     u1050:
  3245     0409                     l1354:
  3246     0409  0870               	movf	___lwdiv@divisor,w
  3247     040A  02F2               	subwf	___lwdiv@dividend,f
  3248     040B  0871               	movf	___lwdiv@divisor+1,w
  3249     040C  1C03               	skipc
  3250     040D  03F3               	decf	___lwdiv@dividend+1,f
  3251     040E  02F3               	subwf	___lwdiv@dividend+1,f
  3252     040F                     l1356:
  3253     040F  1474               	bsf	___lwdiv@quotient,0
  3254     0410                     l1358:
  3255     0410  3001               	movlw	1
  3256     0411                     u1065:
  3257     0411  1003               	clrc
  3258     0412  0CF1               	rrf	___lwdiv@divisor+1,f
  3259     0413  0CF0               	rrf	___lwdiv@divisor,f
  3260     0414  3EFF               	addlw	-1
  3261     0415  1D03               	skipz
  3262     0416  2C11               	goto	u1065
  3263     0417                     l1360:
  3264     0417  3001               	movlw	1
  3265     0418  02F6               	subwf	___lwdiv@counter,f
  3266     0419  1D03               	btfss	3,2
  3267     041A  2C1C               	goto	u1071
  3268     041B  2C1D               	goto	u1070
  3269     041C                     u1071:
  3270     041C  2BF8               	goto	l1352
  3271     041D                     u1070:
  3272     041D                     l1362:
  3273     041D  0875               	movf	___lwdiv@quotient+1,w
  3274     041E  00F1               	movwf	?___lwdiv+1
  3275     041F  0874               	movf	___lwdiv@quotient,w
  3276     0420  00F0               	movwf	?___lwdiv
  3277     0421                     l500:
  3278     0421  0008               	return
  3279     0422                     __end_of___lwdiv:
  3280                           
  3281                           	psect	text20
  3282     0299                     __ptext20:	
  3283 ;; *************** function _HC_SR04_Init *****************
  3284 ;; Defined at:
  3285 ;;		line 155 in file "smart_manhole_monitoring_system.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		None
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3299 ;;      Params:         0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0
  3302 ;;      Totals:         0       0       0       0       0
  3303 ;;Total ram usage:        0 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_main
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312     0299                     _HC_SR04_Init:	
  3313                           ;psect for function _HC_SR04_Init
  3314                           
  3315     0299                     l1378:	
  3316                           ;incstack = 0
  3317                           ; Regs used in _HC_SR04_Init: []
  3318                           
  3319                           
  3320                           ;smart_manhole_monitoring_system.c: 157:     RB0 = 0;
  3321     0299  1283               	bcf	3,5	;RP0=0, select bank0
  3322     029A  1303               	bcf	3,6	;RP1=0, select bank0
  3323     029B  1006               	bcf	6,0	;volatile
  3324     029C                     l104:
  3325     029C  0008               	return
  3326     029D                     __end_of_HC_SR04_Init:
  3327     0002                     ___latbits      equ	2
  3328     007E                     btemp           set	126	;btemp
  3329     007E                     wtemp0          set	126
  3330                           
  3331                           	psect	config
  3332                           
  3333                           ;Config register CONFIG @ 0x2007
  3334                           ;	Oscillator Selection bits
  3335                           ;	FOSC = HS, HS oscillator
  3336                           ;	Watchdog Timer Enable bit
  3337                           ;	WDTE = OFF, WDT disabled
  3338                           ;	Power-up Timer Enable bit
  3339                           ;	PWRTE = ON, PWRT enabled
  3340                           ;	Brown-out Reset Enable bit
  3341                           ;	BOREN = ON, BOR enabled
  3342                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3343                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3344                           ;	Data EEPROM Memory Code Protection bit
  3345                           ;	CPD = OFF, Data EEPROM code protection off
  3346                           ;	Flash Program Memory Write Enable bits
  3347                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3348                           ;	In-Circuit Debugger Mode bit
  3349                           ;	DEBUG = 0x1, unprogrammed default
  3350                           ;	Flash Program Memory Code Protection bit
  3351                           ;	CP = OFF, Code protection off
  3352     2007                     	org	8199
  3353     2007  3F72               	dw	16242

Data Sizes:
    Strings     118
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     64      69
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@tiltStatus(BANK0[16]), main@uartBuffer(BANK1[64]), main@waterLevel(BANK0[16]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@tiltStatus(BANK0[16]), main@uartBuffer(BANK1[64]), main@waterLevel(BANK0[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    lcd_string@str	PTR const unsigned char  size(2) Largest target is 17
		 -> main@tiltStatus(BANK0[16]), main@waterLevel(BANK0[16]), STR_7(CODE[17]), STR_8(CODE[17]), 

    main$242	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_3(CODE[7]), STR_4(CODE[7]), 

    main@tiltStr	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_3(CODE[7]), STR_4(CODE[7]), 

    S735$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@tiltStatus(BANK0[16]), main@uartBuffer(BANK1[64]), main@waterLevel(BANK0[16]), 

    S735$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 29
		 -> STR_1(CODE[14]), STR_2(CODE[14]), STR_5(CODE[15]), STR_6(CODE[15]), 
		 -> STR_9(CODE[29]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 64
		 -> main@tiltStatus(BANK0[16]), main@uartBuffer(BANK1[64]), main@waterLevel(BANK0[16]), 

    UART_Write_Text@text	PTR const unsigned char  size(1) Largest target is 64
		 -> main@uartBuffer(BANK1[64]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 29
		 -> STR_1(CODE[14]), STR_2(CODE[14]), STR_5(CODE[15]), STR_6(CODE[15]), 
		 -> STR_9(CODE[29]), 

    vfpfcnvrt@cp_817	PTR unsigned char  size(2) Largest target is 16
		 -> main@waterLevel(BANK0[16]), ?_sprintf(BANK0[2]), STR_3(CODE[7]), STR_4(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 29
		 -> STR_1(CODE[14]), STR_2(CODE[14]), STR_5(CODE[15]), STR_6(CODE[15]), 
		 -> STR_9(CODE[29]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 29
		 -> STR_1(CODE[14]), STR_2(CODE[14]), STR_5(CODE[15]), STR_6(CODE[15]), 
		 -> STR_9(CODE[29]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_HC_SR04_Read
    _sprintf->_vfprintf
    _vfpfcnvrt->_fputc
    _abs->___awmod
    _lcd_string->_lcd_data
    _lcd_initialize->_lcd_command
    _UART_Write_Text->_UART_Write
    _HC_SR04_Read->___lwdiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               103   103      0    2851
                                             41 BANK0     39    39      0
                                              0 BANK1     64    64      0
                       _HC_SR04_Init
                       _HC_SR04_Read
                   _Tilt_Sensor_Init
                   _Tilt_Sensor_Read
                          _UART_Init
                    _UART_Write_Text
                        _lcd_command
                     _lcd_initialize
                         _lcd_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8    2027
                                             20 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    1816
                                             13 COMMON     1     1      0
                                             16 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    11      5    1683
                                              0 BANK0     16    11      5
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     232
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2      67
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           4     1      3     171
                                              3 COMMON     4     1      3
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       0     0      0      29
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      1     0      1      75
                                              1 COMMON     1     0      1
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Tilt_Sensor_Read                                     4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Tilt_Sensor_Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HC_SR04_Read                                         7     5      2     210
                                              7 COMMON     7     5      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     164
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _HC_SR04_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HC_SR04_Init
   _HC_SR04_Read
     ___lwdiv
   _Tilt_Sensor_Init
   _Tilt_Sensor_Read
   _UART_Init
   _UART_Write_Text
     _UART_Write
   _lcd_command
   _lcd_initialize
     _lcd_command
   _lcd_string
     _lcd_data
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     80      80    100.0%
BANK1               80     64      69     86.2%
BANK3               96      0      32     33.3%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     195      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Apr 25 15:11:01 2025

                       pc 0002              lcd_data@data 0072                        l90 0303  
                      l93 0318                        l87 0331                        l79 05C9  
            ___awdiv@sign 0075                        fsr 0004                       l101 03AA  
                     l110 03C1                       l104 029C                       l112 03C5  
                     l113 03DF                       l122 02AE                       l107 03B6  
                     l131 02B0                       l116 0297                       l134 02BA  
                     l119 02C9                       l128 02EE                       l500 0421  
                     l373 04DB                       l721 07EB                       l386 0478  
                     l741 02DA                       l734 037B                       l753 0575  
                     l683 0354                       l764 0298                       _RB0 0030  
                     _RB1 0031                       _RB2 0032                       u600 0489  
                     u601 0488                       u610 0498                       u611 0497  
                     u700 0432                       u701 0431                       u630 04A8  
                     u710 043D                       u631 04A7                       u711 043C  
                     u800 0507                       u625 049C                       u801 0506  
                     u650 04B9                       u730 044D                       u810 0539  
                     u651 04B8                       u731 044C                       u811 0538  
                     u740 0457                       u820 055A                       u900 070B  
                     u645 04A9                       u741 0456                       u725 0441  
                     u901 070A                       u670 04CD                       u590 047E  
                     u830 02CE                       u910 0710                       u671 04CC  
                     u655 04B5                       u591 047D                       u831 02CD  
                     u815 0535                       u911 070F                       u680 04D2  
                     u760 046A                       u920 0715                       u840 0681  
                     u681 04D1                       u665 04C1                       u761 0469  
                     u745 0453                       u921 0714                       u841 0680  
                     u770 046F                       u690 0427                       u930 073C  
                     u850 06A1                       u771 046E                       u755 045E  
                     u691 0426                       u931 073B                       u851 06A0  
                     u780 04E2                       u940 074C                       u860 06AD  
                     u781 04E1                       u941 074B                       u861 06AC  
                     u790 04E8                       u950 0761                       u870 06CA  
                     u791 04E7                       u951 0760                       u871 06C8  
                     u960 0770                       u880 06CB                       u961 076F  
                     u970 077F                       u890 0706                       u971 077E  
                     u891 0705                       u980 0789                       u981 0788  
                     u990 07CA                       u991 07C9                       _abs 02CA  
                     fsr0 0004                       indf 0000              ___awmod@sign 0075  
                    l1200 0457                      l1210 0474                      l1202 045D  
                    ?_abs 0076                      l1140 0485                      l1132 0479  
                    l1204 0464                      l1220 04EF                      l1300 079C  
                    l1150 0498                      l1142 0489                      l1134 047A  
                    l1206 046A                      l1230 02CE                      l1222 0507  
                    l1214 04DC                      l1302 07B4                      l1310 07D2  
                    l1400 03AB                      l1320 02F5                      l1160 04B9  
                    l1152 049B                      l1144 048E                      l1136 047E  
                    l1208 046F                      l1232 02CF                      l1224 0539  
                    l1216 04E2                      l1304 07BC                      l1240 0685  
                    l1410 03BD                      l1402 03AE                      l1322 02F6  
                    l1330 030A                      l1170 04D2                      l1162 04BF  
                    l1154 04A2                      l1146 0490                      l1138 0483  
                    l1218 04E8                      l1306 07CB                      l1250 06AD  
                    l1242 068B                      l1340 03E0                      l1420 03CA  
                    l1412 03BE                      l1404 03B3                      l1324 0300  
                    l1316 02F0                      l1332 030B                      l1172 04D7  
                    l1164 04C0                      l1156 04A4                      l1148 0492  
                    l1180 0427                      l1228 02CA                      l1260 06EB  
                    l1252 06BE                      l1244 068F                      l1236 0671  
                    l1350 03F4                      l1342 03E2                      l1422 03DB  
                    l1414 03BF                      l1406 03BA                      l1318 02F4  
                    l1334 0315                      l1326 0305                      l1430 038F  
                    l1166 04C7                      l1158 04A8                      l1190 043D  
                    l1182 042C                      l1270 0715                      l1262 0700  
                    l1254 06C3                      l1246 0695                      l1238 0681  
                    l1360 0417                      l1352 03F8                      l1344 03E8  
                    l1416 03C0                      l1408 03BC                      l1336 02B0  
                    l1440 02E4                      l1328 0309                      l1432 0391  
                    l1168 04CD                      l1192 0440                      l1184 042E  
                    l1176 0422                      l1280 073E                      l1272 071E  
                    l1264 0706                      l1256 06C5                      l1248 06A1  
                    l1354 0409                      l1346 03EB                      l1362 041D  
                    l1418 03C6                      l1338 02B6                      l1442 02E6  
                    l1434 0397                      l1426 037C                      l1194 0447  
                    l1186 0432                      l1178 0423                      l1290 0770  
                    l1282 074C                      l1274 0732                      l1266 070B  
                    l1258 06CC                      l1370 036B                      l1450 057E  
                    l1356 040F                      l1348 03F2                      l1380 02A5  
                    l1436 02DB                      l1428 037E                      l1196 0449  
                    l1188 0437                      l1292 077F                      l1284 0750  
                    l1268 0710                      l1276 0736                      l1372 0377  
                    l1460 0593                      l1452 057F                      l1444 0576  
                    l1358 0410                      l1382 02BB                      l1438 02DC  
                    l1198 044D                      l1286 0753                      l1278 073D  
                    l1366 0355                      l1390 033A                      l1470 05C5  
                    l1462 059E                      l1454 0584                      l1446 057B  
                    l1376 0319                      l1288 0761                      l1296 0784  
                    l1368 035A                      l1392 033C                      l1480 05FA  
                    l1472 05CB                      l1464 05AA                      l1456 0589  
                    l1448 057D                      l1378 0299                      l1298 0789  
                    l1394 033E                      l1386 0332                      l1490 0633  
                    l1482 0600                      l1474 05D6                      l1466 05B5  
                    l1458 058E                      l1396 034B                      l1388 0336  
                    l1492 063E                      l1484 0611                      l1476 05E3  
                    l1468 05C0                      l1494 0657                      l1486 061C  
                    l1478 05EF                      l1496 065E                      l1488 062D  
                    STR_1 005F                      STR_2 006D                      STR_3 007B  
                    STR_4 0082                      STR_5 0041                      STR_6 0050  
                    STR_7 0030                      STR_8 0030                      STR_9 0013  
                    u1000 02B6                      u1001 02B5                      u1010 03E8  
                    u1011 03E7                      u1100 03C5                      u1101 03C4  
                    u1030 03F8                      u1110 0397                      u1031 03F7  
                    u1111 0396                      u1120 03AA                      u1025 03EC  
                    u1121 03A9                      u1050 0409                      u1130 02EE  
                    u1051 0408                      u1131 02ED                      u1140 059E  
                    u1045 03F9                      u1141 059D                      u1070 041D  
                    u1150 05C0                      u1071 041C                      u1055 0405  
                    u1207 03B0                      u1151 05BF                      u1080 0377  
                    u1160 05E3                      u1065 0411                      u1081 0376  
                    u1161 05E2                      u1090 03BA                      u1091 03B9  
                    u1165 05DF                      u1177 0666                      u1187 0310  
                    u1197 02FB                      abs@a 0076                      _dbuf 0190  
                    _main 0576                      _prec 00E2            ??_HC_SR04_Init 0070  
          ??_HC_SR04_Read 0079                      btemp 007E               main@tiltStr 006C  
                    start 0000               lcd_string@i 0076   __end_of_UART_Write_Text 02EF  
                   ??_abs 0078              main@distance 006E                     ?_main 0070  
         __end_of___awdiv 04DC           __end_of___awmod 0479           ___awdiv@divisor 0070  
         __end_of___lwdiv 0422           ___awdiv@counter 0074              vfpfcnvrt@fmt 0022  
                   _TMR1H 000F                     _TMR1L 000E                     _SPBRG 0099  
                   _PORTD 0008                     _TRISC 0087                     _TRISD 0088  
                   _TXREG 0019               ?_UART_Write 0070                     _flags 00E4  
                   _fputc 04DC                     _width 00E0                     _putch 0298  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 0355           __initialization 07EC              __end_of_main 0671  
                  ??_main 0049            lcd_command@cmd 0072                    ?_fputc 0070  
        ___awdiv@dividend 0072                    ?_putch 0070             vfpfcnvrt@done 0029  
                  _TMR1CS 0081                    _TMR1ON 0080                    _TRISB0 0430  
                  _TRISB1 0431                    _TRISB2 0432      HC_SR04_Read@distance 007C  
        __end_of_lcd_data 0319              vfprintf@cfmt 007D         __end_of_UART_Init 02AF  
               ??___awdiv 0074                 ??___awmod 0074          ?_UART_Write_Text 0071  
               ??___lwdiv 0074          ___awdiv@quotient 0076           ___awmod@divisor 0070  
         ___awmod@counter 0074      __end_of_HC_SR04_Init 029D      __end_of_HC_SR04_Read 03E0  
                  fputc@c 0070                    putch@c 0070          __end_of_vfprintf 037C  
        ??_lcd_initialize 0073                 ??_sprintf 003C             lcd_string@num 0075  
           lcd_string@str 0073   __end_of__initialization 07FC         ?_Tilt_Sensor_Init 0070  
       ?_Tilt_Sensor_Read 0070        ??_Tilt_Sensor_Init 0070        ??_Tilt_Sensor_Read 0072  
          __pcstackCOMMON 0070             __end_of_fputc 0576             __end_of_putch 0299  
                 ??_fputc 0074                   ??_putch 0070                __pbssBANK1 00E0  
              __pbssBANK3 0190                __pmaintext 0576                   _T1CKPS0 0084  
                 _T1CKPS1 0085                   _T1OSCEN 0083              ??_UART_Write 0070  
               ?_lcd_data 0070                _lcd_string 037C                __stringtab 0003  
                 ___awdiv 0479                   ___awmod 0422        __end_of_UART_Write 02BB  
                 ___lwdiv 03E0                 ?_vfprintf 0030                   __ptext1 0332  
                 __ptext2 0355                   __ptext3 0671                   __ptext4 04DC  
                 __ptext5 0298                   __ptext6 02CA                   __ptext7 0422  
                 __ptext8 0479                   __ptext9 037C          ___awmod@dividend 0072  
          main@uartBuffer 00A0                ??_lcd_data 0070                   _sprintf 0332  
                 clrloop0 029E      end_of_initialization 07FC                   fputc@fp 0072  
          main@waterLevel 005C            main@tiltStatus 004C              _HC_SR04_Init 0299  
            _HC_SR04_Read 03AB         __end_of_vfpfcnvrt 07EC                 _RCSTAbits 0018  
        vfpfcnvrt@convarg 002B                ??_vfprintf 007D                 _UART_Init 02A5  
               _PORTCbits 0007            UART_Write@data 0070                 _TRISCbits 0087  
             ?_lcd_string 0073                 _TXSTAbits 0098             ??_lcd_command 0070  
             vfpfcnvrt@ap 0023               vfpfcnvrt@cp 002A               vfpfcnvrt@fp 0020  
              ?_UART_Init 0070       start_initialization 07EC               __end_of_abs 02DB  
             vfprintf@fmt 0032       __end_of_lcd_command 0304                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0          ___lwdiv@dividend 0072  
                ?___awdiv 0070                  ?___awmod 0070                  ?___lwdiv 0070  
             ??_UART_Init 0070                 __pstrings 0003          ___lwdiv@quotient 0074  
                ?_sprintf 0034         ??_UART_Write_Text 0072                 clear_ram0 029D  
             _lcd_command 02EF           vfpfcnvrt@cp_817 0027                 _vfpfcnvrt 0671  
        _Tilt_Sensor_Init 0297          _Tilt_Sensor_Read 02BB               __stringbase 0012  
            ??_lcd_string 0076                vfpfcnvrt@c 002F                vfprintf@ap 0033  
              vfprintf@fp 0030                ?_vfpfcnvrt 0020        __end_of_lcd_string 03AB  
      __end_of__stringtab 0013                sprintf@fmt 0035                  _main$242 006D  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0076                  __ptext10 0304  
                __ptext11 0319                  __ptext20 0299                  __ptext12 02EF  
                __ptext13 02DB                  __ptext14 02AF                  __ptext15 02A5  
                __ptext16 02BB                  __ptext17 0297                  __ptext18 03AB  
                __ptext19 03E0                  _lcd_data 0304       UART_Write_Text@text 0071  
          _lcd_initialize 0319                  _vfprintf 0355          HC_SR04_Read@time 007A  
               sprintf@ap 003D    __end_of_lcd_initialize 0332                 stringcode 000D  
             ??_vfpfcnvrt 0025           _UART_Write_Text 02DB                  sprintf@f 003E  
                sprintf@s 0034                  stringdir 000D                  stringtab 0003  
              _UART_Write 02AF  __end_of_Tilt_Sensor_Init 0298  __end_of_Tilt_Sensor_Read 02CA  
         ?_lcd_initialize 0070             ?_HC_SR04_Init 0070             ?_HC_SR04_Read 0077  
            ?_lcd_command 0070  
